/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

/*
	Based on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>
	http://www.phpied.com/rgb-color-parser-in-javascript/
*/

/*
            AdoptNode() is not used because internal state is not reset
            (e.g. the past names map of a HTMLFormElement), this is safe
            in theory but we would rather not risk another attack vector.
            The state that is cloned by importNode() is explicitly defined
            by the specs.
          */

/*
            if (isIFrameElement(node)) {
                return this.createIFrameClone(node);
            }
    */

/*
        createIFrameClone(iframe: HTMLIFrameElement) {
            const tempIframe = <HTMLIFrameElement>iframe.cloneNode(false);
            const iframeKey = generateIframeKey();
            tempIframe.setAttribute('data-html2canvas-internal-iframe-key', iframeKey);

            const {width, height} = parseBounds(iframe);

            this.resourceLoader.cache[iframeKey] = getIframeDocumentElement(iframe, this.options)
                .then(documentElement => {
                    return this.renderer(
                        documentElement,
                        {
                            allowTaint: this.options.allowTaint,
                            backgroundColor: '#ffffff',
                            canvas: null,
                            imageTimeout: this.options.imageTimeout,
                            logging: this.options.logging,
                            proxy: this.options.proxy,
                            removeContainer: this.options.removeContainer,
                            scale: this.options.scale,
                            foreignObjectRendering: this.options.foreignObjectRendering,
                            useCORS: this.options.useCORS,
                            target: new CanvasRenderer(),
                            width,
                            height,
                            x: 0,
                            y: 0,
                            windowWidth: documentElement.ownerDocument.defaultView.innerWidth,
                            windowHeight: documentElement.ownerDocument.defaultView.innerHeight,
                            scrollX: documentElement.ownerDocument.defaultView.pageXOffset,
                            scrollY: documentElement.ownerDocument.defaultView.pageYOffset
                        },
                    );
                })
                .then(
                    (canvas: HTMLCanvasElement) =>
                        new Promise((resolve, reject) => {
                            const iframeCanvas = document.createElement('img');
                            iframeCanvas.onload = () => resolve(canvas);
                            iframeCanvas.onerror = (event) => {
                                // Empty iframes may result in empty "data:," URLs, which are invalid from the <img>'s point of view
                                // and instead of `onload` cause `onerror` and unhandled rejection warnings
                                // https://github.com/niklasvh/html2canvas/issues/1502
                                iframeCanvas.src == 'data:,' ? resolve(canvas) : reject(event);
                            };
                            iframeCanvas.src = canvas.toDataURL();
                            if (tempIframe.parentNode && iframe.ownerDocument && iframe.ownerDocument.defaultView) {
                                tempIframe.parentNode.replaceChild(
                                    copyCSSStyles(
                                        iframe.ownerDocument.defaultView.getComputedStyle(iframe),
                                        iframeCanvas
                                    ),
                                    tempIframe
                                );
                            }
                        })
                );
            return tempIframe;
        }
    */

/*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

/*
   * Instance method to close sweetAlert
   */

/*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */

/*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

/*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */

/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */

/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */

/*
 global require ('catalogos-muns.js');
 global require ('catalogos.js');
 global require ('config.js');
*/

/*      good lazy nice chain */

/* != Z_NULL*/

/* , ...args */

/* , fromIndex = 0 */

/* , init */

/* , initialValue */

/* , mapfn = undefined, thisArg = undefined */

/* , newTarget */

/* , position = 0 */

/* , receiver */

/* , start = 0, end = @length */

/* , that = undefined */

/* , thisArg */

/* 0 */

/* 0 store only */

/* 1 */

/* 1 max speed, no lazy matches */

/* 10 */

/* 11 */

/* 12 */

/* 13 */

/* 14 */

/* 15 */

/* 16 */

/* 16K elements by default */

/* 17 */

/* 2 */

/* 2nd level distance code */

/* 2nd level length code */

/* 3 */

/* 4 */

/* 4 lazy matches */

/* 4: two words for the lengths */

/* 5 */

/* 6 */

/* 7 */

/* 8 */

/* 9 */

/* 9 max compression */

/* == Z_NULL */

/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */

/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */

/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */

/* ===========================================================================
 * Send a stored block
 */

/* ===========================================================================*/

/* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

/* Add #text in case KEEP_CONTENT is set to true */

/* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */

/* Add properties to a lookup table */

/* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */

/* Allow valid data-* attributes: At least one character after "-"
          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
          We don't need to check the value; it's always URI safe. */

/* Allowed flush values; see deflate() and inflate() below for details */

/* And continue down the tree, setting j to the left son of k */

/* Assign config vars */

/* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

/* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */

/* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */

/* Attributes
	---------------------------------------------------------------------- */

/* BACKGROUND_BORDERS */

/* BLINK */

/* BLOCK */

/* BORDER_BOX */

/* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

/* Build the Huffman trees unless a stored block is forced */

/* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */

/* Build the bit length tree: */

/* CLIP */

/* CONTENT */

/* CONTENTS */

/* CONTENT_BOX */

/* CREATES_REAL_STACKING_CONTEXT */

/* CREATES_STACKING_CONTEXT */

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */

/* Check attributes, sanitize if necessary */

/* Check for non-textual ("black-listed") bytes. */

/* Check for textual ("white-listed") bytes. */

/* Check if dirty is correctly typed for IN_PLACE */

/* Check if element is clobbered or can clobber */

/* Check if tagname contains Unicode */

/* Check if the file is binary or text */

/* Check if we have attributes; if not we might have a text node */

/* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */

/* Check value is safe. First, is attr inert? If so, is safe */

/* Check we can run. Otherwise fall back or ignore */

/* Check we have a DOM node from the data */

/* Check whether element has a valid namespace */

/* Clean up removed elements */

/* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */

/* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */

/* Construct the codes of the static literal tree */

/* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */

/* Construct the literal and distance trees */

/* Contains
	---------------------------------------------------------------------- */

/* Copy as much as possible from input to output: */

/* Create a HTML document */

/* Create a new node father of n and m */

/* DISTS */

/* Deal with !@#$% 64K limit: */

/* Deep shadow DOM detected */

/* Depth of each subtree used as tie breaker for trees of equal frequency
   */

/* Detect mXSS attempts abusing namespace confusion */

/* Determine the best encoding. Compute the block lengths in bytes. */

/* Determine the bit length frequencies for literal and distance trees */

/* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */

/* Did the hooks approve of the attribute? */

/* Didn't use ct_data typedef below to suppress compiler warning */

/* Distance codes 0..29 base */

/* Distance codes 0..29 extra */

/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

/* Do not insert strings in hash table beyond this. */

/* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */

/* Do not waste too much time if we already have a good match: */

/* Emit a stored block if pending_buf will be full: */

/* Emit match if have run of MIN_MATCH or longer, else emit literal */

/* Exchange v with the smallest son */

/* Execute a hook if present */

/* Exit directly if we have nothing to do */

/* Exit if v is smaller than both sons */

/* FLEX */

/* FLOW */

/* FLOW_ROOT */

/* FULL_FLUSH or SYNC_FLUSH */

/* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */

/* Fill the window as much as possible: */

/* Find the first bit length which could increase: */

/* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */

/* Find the longest match, discarding those <= prev_length.
     */

/* First normalized distance for each code (0 = distance of 1) */

/* First normalized length for each code (0 = MIN_MATCH) */

/* Fix IE's strange behavior with manipulated textNodes #89 */

/* Flush as much pending output as possible */

/* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */

/* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */

/* For some embedded targets, global variables are not initialized: */

/* GRID */

/* Get node iterator */

/* Get the element's text content */

/* Go backwards over all attributes; safely remove bad ones */

/* Handle invalid data-* attribute set by try-catching it */

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */

/* Heads of the hash chains or NIL. */

/* Here, lc is the match length - MIN_MATCH */

/* IE10 doesn't support __lookupGetter__ so lets'
   * simulate it. It also automatically checks
   * if the prop is function or getter and behaves
   * accordingly. */

/* INLINE */

/* INLINE_BLOCK */

/* INLINE_FLEX */

/* INLINE_GRID */

/* INLINE_LIST_ITEM */

/* INLINE_TABLE */

/* IS_LIST_OWNER */

/* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */

/* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */

/* If dirty is a DOM element, append to an empty document to avoid
           elements being stripped by the parser */

/* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */

/* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */

/* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */

/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

/* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */

/* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */

/* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */

/* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */

/* If we sanitized `dirty` in-place, return it. */

/* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */

/* Initialize shared config vars if necessary. */

/* Initialize the document to work on */

/* Initialize the first block of the first file: */

/* Initialize the hash value now that we have some input: */

/* Initialize the mapping dist (0..32K) -> dist code (0..29) */

/* Initialize the mapping length (0..255) -> length code (0..28) */

/* Initialize the trees. */

/* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */

/* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */

/* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

/* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */

/* Internal Use Only */

/* Is `value` valid for this attribute? */

/* Keep content except for bad-listed elements */

/* LINE_THROUGH */

/* LIST_ITEM */

/* LZ77 window size (32K by default) */

/* Length codes 257..285 base */

/* Length codes 257..285 extra */

/* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

/* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

/* Make sure attribute cannot clobber */

/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */

/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */

/* Make sure that we have a literal to write. */

/* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */

/* Make sure we have a string to sanitize.
        DO NOT return early, as this will return the wrong type if
        the user has requested a DOM object rather than a string */

/* Merge configuration parameters */

/* NONE */

/* No match, output a literal byte */

/* Node is already a body, use as is */

/* Not implemented
module.exports.deflateBound = deflateBound;
module.exports.deflateCopy = deflateCopy;
module.exports.deflateParams = deflateParams;
module.exports.deflatePending = deflatePending;
module.exports.deflatePrime = deflatePrime;
module.exports.deflateTune = deflateTune;
*/

/* Not implemented
module.exports.inflateCopy = inflateCopy;
module.exports.inflateGetDictionary = inflateGetDictionary;
module.exports.inflateMark = inflateMark;
module.exports.inflatePrime = inflatePrime;
module.exports.inflateSync = inflateSync;
module.exports.inflateSyncPoint = inflateSyncPoint;
module.exports.inflateUndermine = inflateUndermine;
*/

/* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */

/* Now let's check the element's type and name */

/* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */

/* Now reverse the bits */

/* Now start iterating over the created document */

/* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

/* OVERLINE */

/* Output a literal byte */

/* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */

/* PADDING_BOX */

/* Parse profile info */

/* Possible values of the data_type field (though see inflate()) */

/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */

/* Process the input block. */

/* Public constants ==========================================================*/

/* QSA/matchesSelector
	---------------------------------------------------------------------- */

/* RUBY */

/* RUBY_BASE */

/* RUBY_BASE_CONTAINER */

/* RUBY_TEXT */

/* RUBY_TEXT_CONTAINER */

/* RUN_IN */

/* Remove attribute */

/* Remove element if anything forbids its presence */

/* Remove first element node (ours) if FORCE_BODY is set */

/* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */

/* Return sanitized string or DOM */

/* SUBGRID */

/* Sanitize attribute content to be template-safe */

/* Sanitize element content to be template-safe */

/* Sanitize final string template-safe */

/* Sanitize tags and elements */

/* Save the adler32 of the preset dictionary: */

/* See how many times the previous byte repeats */

/* Set configuration parameters */

/* Set j to the smallest of the two sons: */

/* Set the default configuration parameters:
   */

/* Shadow DOM detected, sanitize it */

/* Shallow clone an object */

/* Shield configuration object from prototype pollution */

/* Shield configuration object from tampering */

/* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */

/* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

/* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

/* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

/* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

/* Sorting
	---------------------------------------------------------------------- */

/* Start a new block or continue the current one.
   */

/* Stop searching when current match exceeds this */

/* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */

/* Stringify, in case dirty is an object */

/* TABLE */

/* TABLE_CAPTION */

/* TABLE_CELL */

/* TABLE_COLUMN */

/* TABLE_COLUMN_GROUP */

/* TABLE_FOOTER_GROUP */

/* TABLE_HEADER_GROUP */

/* TABLE_ROW */

/* TABLE_ROW_GROUP */

/* TRANSFORM */

/* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */

/* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */

/* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */

/* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */

/* The deflate compression method */

/* The distribution counts are first used to generate the code values
   * without bit reversal.
   */

/* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */

/* The field len is now set, we can generate the bit codes */

/* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */

/* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

/* The static distance tree is trivial: */

/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */

/* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */

/* There is no previous match to compare with, wait for
       * the next step to decide.
       */

/* This happens for example on obj2 and pic of the Calgary corpus */

/* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */

/* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */

/* UNDERLINE */

/* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

/* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

/* Update opt_len to include the bit length tree and counts */

/* Use a faster search when the previous match is longer than this */

/* Use createHTMLDocument in case DOMParser is not available */

/* Use the DOMParser API by default, fallback later if needs be */

/* User must not provide more input after the first FINISH: */

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */

/* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */

/* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */

/* We overwrite tree[n].Dad which is no longer needed */

/* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

/* Work around a security issue in jQuery 3.0 */

/* Work on whole document or just its body */

/* Write the header */

/* Write the trailer */

/* Z_BUF_ERROR     (-5) */

/* Z_DATA_ERROR    (-3) */

/* Z_ERRNO         (-1) */

/* Z_MEM_ERROR     (-4) */

/* Z_NEED_DICT       2  */

/* Z_OK              0  */

/* Z_STREAM_END      1  */

/* Z_STREAM_ERROR  (-2) */

/* Z_VERSION_ERROR (-6) */

/* a code's length in bits */

/* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */

/* adler32 value of the uncompressed data */

/* adler32(0, null, 0)*/

/* adler32(strm->adler, dictionary, dictLength); */

/* align on byte boundary */

/* allocated sliding window, if needed */

/* already empty otherwise */

/* and insert the new node in the heap */

/* as the name implies */

/* avoid BUF_ERROR at next call, see above */

/* avoid computing Adler-32 in read_buf */

/* backwards increment the len-bit code huff */

/* base index for extra_bits */

/* best guess about the data type: binary or text */

/* binding */

/* bit 0 true for zlib, bit 1 true for gzip */

/* bit accumulator */

/* bit length of current block with optimal trees */

/* bit length of current block with static trees */

/* bits back of last unprocessed length/lit */

/* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */

/* bound code lengths, force root to be within code lengths */

/* buffer for gzip header crc calculation */

/* buffer index for literals or lengths */

/* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */

/* build fixed huffman tables if first call (may not be thread safe) */

/* bytes at end of window left to insert */

/* can only be DEFLATED */

/* check available table space */

/* check for an over-subscribed or incomplete set of lengths */

/* check for correct dictionary identifier */

/* check for end-of-block code (better have one) */

/* check for enough space */

/* check if zlib header allowed */

/* check state */

/* code index */

/* compression level (1..9) */

/* compression levels */

/* contiguous in window */

/* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */

/* copy direct from output */

/* copy from output */

/* copy from window */

/* copy state to local variables */

/* copy state->wsize or less output bytes into the circular window */

/* create new sub-table if needed */

/* create table entry */

/* current bits to drop from code for index */

/* current inflate mode */

/* current table index bits */

/* current table to fill in */

/* decode codes */

/* decode literals and length/distances until end-of-block or not enough
     input data or output space */

/* default */

/* default.locals */

/* desc. for bit length tree */

/* desc. for distance tree */

/* desc. for literal tree */

/* determine length of next table */

/* dictid = adler32(dictid, dictionary, dictLength); */

/* dist = match distance - 1 */

/* dist is now the match distance - 1 */

/* distance back in window */

/* distance back to copy string from */

/* distance base */

/* distance index */

/* distance of matched string */

/* distance table */

/* distance tree */

/* do this just once */

/* dummy value--not used */

/* dynamic block */

/* dynamic table building */

/* dynamic table for distance codes (JS specific) */

/* dynamic table for length/literal codes (JS specific) */

/* element of largest frequency */

/* empty */

/* end of block */

/* end-of-block */

/* eslint no-unused-expressions: "off" */

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable eqeqeq */

/* eslint-disable new-cap */

/* eslint-disable no-bitwise -- used for calculations */

/* eslint-disable no-cond-assign */

/* eslint-disable no-loop-func */

/* eslint-disable no-proto -- safe */

/* eslint-disable space-unary-ops */

/* eslint-disable unicorn/prefer-query-selector -- aiming at
  backward-compatibility */

/* eslint-enable eqeqeq */

/* eslint-enable no-cond-assign */

/* eslint-enable no-loop-func */

/* expect zlib header */

/* extra bits for each bit length code */

/* extra bits for each code or NULL */

/* extra bits for each distance code */

/* extra bits for each length code */

/* extra bits needed */

/* extra field length (valid if extra != Z_NULL) */

/* extra flags (not used when writing a gzip file) */

/* extract wrap request from windowBits parameter */

/* falls through */

/* favor or force Huffman coding*/

/* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */

/* fixed and dynamic code tables */

/* fixed block */

/* flush the current block */

/* for string and stored block copying */

/* for table and code decoding */

/* forget history */

/* four bytes */

/* from now on, all distances are divided by 128 */

/* generate offsets into symbol table for each length for sorting */

/* get the state */

/* getElement(s)By*
	---------------------------------------------------------------------- */

/* global ActiveXObject -- old IE */

/* global Reflect, Promise */

/* global Symbol */

/* global Symbol -- required for testing */

/* global Symbol -- safe */

/* global globalThis -- safe */

/* go to next symbol, update count, len */

/* guard */

/* guard already set */

/* gzip header */

/* gzip header information to write */

/* gzip header method and flags (0 if zlib) */

/* handle error breaks in while */

/* harmony default export */

/* harmony export */

/* harmony import */

/* hash index of string to be inserted */

/* hash_size-1 */

/* head of hash chain */

/* head of the hash chain */

/* heap index */

/* heap used to build the Huffman trees */

/* here min is 1 << curr */

/* i: waiting for type bits, including last-flag bit */

/* if dictionary would fill window, just replace the history */

/* if false, allow invalid distance too far */

/* if first time, transition to sub-tables */

/* if it hasn't been done already, allocate space for the window */

/* ignore */

/* impossible */

/* incomplete set */

/* increment past last table */

/* index bits for distcode */

/* index bits for lencode */

/* index in bl_order */

/* index of last bit length code of non zero freq */

/* initialize opts for loop */

/* input bit accumulator */

/* insert dictionary into window and hash */

/* intereses */

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overridden.
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overridden.
 **/

/* istanbul ignore if  */

/* istanbul ignore if */

/* istanbul ignore next  */

/* iterate over heap elements */

/* iterates over all tree elements */

/* iterates over tree elements */

/* jshint -W018 */

/* just in case */

/* keep the nodes sorted by frequency */

/* largest code with non zero frequency */

/* last error message, NULL if no error */

/* lc is the unmatched char */

/* left son of k */

/* length base */

/* length code for each normalized match length (0 == MIN_MATCH) */

/* length of best match */

/* literal */

/* literal or length of data to copy */

/* literal tree */

/* literal/length table */

/* local strm.input */

/* log base 2 of requested window size */

/* log2(hash_size) */

/* log2(w_size)  (8..16) */

/* longest_match() sets match_start */

/* m = node of next least frequency */

/* mask for comparing low */

/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/

/* max bit length for the codes */

/* max distance in output */

/* max hash chain length */

/* max number of elements in the tree */

/* min repeat count */

/* minimum length is three */

/* modification time */

/* move one leaf down the tree */

/* move one overflow item as its brother */

/* nb of bytes in the pending buffer */

/* new node being created */

/* next available space in codes[] */

/* next code value for each bit length */

/* next input byte */

/* next internal node of the tree */

/* next output byte should be put there */

/* next pending byte to output to the stream */

/* no symbols to code at all */

/* no symbols, but wait for decoding to report error */

/* node is 0 or 1 so it does not have extra bits */

/* not +255 as stated in appnote.txt */

/* not -3 as stated in appnote.txt */

/* not a leaf node */

/* not visible by applications */

/* number of bits in "in" */

/* number of bytes available at input */

/* number of code length code lengths */

/* number of code lengths in lens[] */

/* number of codes at each bit length for an optimal tree */

/* number of distance code lengths */

/* number of elements in hash table */

/* number of elements in the heap */

/* number of elements with bit length too large */

/* number of extra bits */

/* number of extra bits to send */

/* number of length code lengths */

/* number of string matches in current block */

/* number of valid bytes ahead in window */

/* one byte */

/* operating system */

/* opt_len and static_len in bytes */

/* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

/* output still pending */

/* over-subscribed */

/* permutation of code lengths */

/* point entry in root table to sub-table */

/* pointer back to this zlib stream */

/* pointer to extra field or Z_NULL if none */

/* pointer to zero-terminated comment or Z_NULL */

/* pointer to zero-terminated file name or Z_NULL */

/* previous match */

/* process all codes and make table entries */

/* protected copy of check value */

/* protected copy of output count */

/* provided dependency */

/* remaining free space at output */

/* replicate for those indices with low len bits equal to huff */

/* rest from output */

/* return code */

/* return unused bytes (on entry, bits < 8, so in won't go too far back) */

/* root of the heap */

/* running code value */

/* running index in l_buf */

/* save header structure */

/* save offset to next table */

/* scan goes up to strend for length of run */

/* see if copy from window */

/* send block type */

/* send the distance code */

/* send the length code */

/* set if current block must be flushed */

/* set if previous match exists */

/* set number of window bits, free window if different */

/* set return parameters */

/* set up for code type */

/* size of pending_buf */

/* skip check */

/* sliding window */

/* some from end of window */

/* some from start of window */

/* some from window */

/* sort symbols by length, by symbol order within each length */

/* space at comment (only when reading header) */

/* space at extra (only when reading header) */

/* space at name (only when reading header) */

/* start of bytes to update crc */

/* start of matching string */

/* start of string to insert */

/* starting code */

/* starting code length */

/* starting code symbol */

/* starting table for distance codes */

/* starting table for length/literal codes */

/* static tree or NULL */

/* stop if match long enough */

/* stored block */

/* string at strstart already in table */

/* strstart == 0 is possible when wraparound on 16-bit machine */

/* suppress zlib wrapper */

/* temporary storage for code lengths */

/* the dynamic tree */

/* three bytes */

/* to support ill-conceived Java test suite */

/* total number of bytes output so far */

/* total number of input bytes read so far */

/* tree[max_code+1].Len = -1; */

/* trigger new sub-table when len > root */

/* true if compressed data believed to be text */

/* true if dictionary provided */

/* true if processing last block */

/* true if there was or will be a header crc */

/* true when done reading gzip header (not used when writing a gzip file) */

/* two bytes */

/* type is either 'confirm' or 'deny' */

/* until 256-byte window bug fixed */

/* unused */

/* update state and reset the rest of it */

/* update state and return */

/* use base and extra for symbol > end */

/* use constant limit because in js we should not preallocate memory */

/* use root table entries */

/* use the tail */

/* used by trees.c: */

/* valid bytes in the window */

/* value of flush param for previous deflate call */

/* very common case */

/* w_size - 1 */

/* we now have strstart >= MAX_DIST */

/* webpack/runtime/compat get default export */

/* webpack/runtime/create fake namespace object */

/* when using zlib wrappers, compute Adler-32 for provided dictionary */

/* where in extra, name, or comment */

/* where to save gzip header information */

/* window size or zero if not using window */

/* window write index */

/* with header */

/* work area for code table building */

/* wrap around window */

/* write gzip wrapper instead */

/* write the trailer only once! */

/* zlib header max distance (INFLATE_STRICT) */

/*!
  * Bootstrap v4.6.0 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */

/*!
 * 
 *             jsPDF AutoTable plugin v3.5.14
 *             
 *             Copyright (c) 2021 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable
 *             Licensed under the MIT License.
 *             http://opensource.org/licenses/mit-license
 *         
 */

/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */

/*!
 * html2canvas 1.0.0-rc.7 <https://html2canvas.hertzen.com>
 * Copyright (c) 2020 Niklas von Hertzen <https://hertzen.com>
 * Released under MIT License
 */

/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */

/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.2.2/LICENSE */

/*#__PURE__*/

/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

/**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */

/**
         * Get the value for a code point as stored in the Trie.
         *
         * @param codePoint the code point
         * @return the value
         */

/**
       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`
       * Do not move `document` in `htmlElements` array
       * It will remove `EVENT_CLICK_DATA_API` event that should remain
       */

/**
     * @deprecated
     */

/**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */

/**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */

/**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */

/**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */

/**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */

/**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */

/**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */

/**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */

/**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */

/**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */

/**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */

/**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */

/**
     * AddHook
     * Public method to add DOMPurify hooks
     *
     * @param {String} entryPoint entry point for the hook to add
     * @param {Function} hookFunction function to execute
     */

/**
     * Array of elements that DOMPurify removed during sanitation.
     * Empty if nothing was removed.
     */

/**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

/**
     * Create Canvg instance from SVG source string.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

/**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string or URL.
     * @param options - Rendering options.
     */

/**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

/**
     * Document is ready promise.
     */

/**
     * Document is ready value.
     */

/**
     * Expose whether this browser supports running the full DOMPurify.
     */

/**
     * Public method to check if an attribute value is valid.
     * Uses last set config, if any. Otherwise, uses config defaults.
     * isValidAttribute
     *
     * @param  {string} tag Tag name of containing element.
     * @param  {string} attr Attribute name.
     * @param  {string} value Attribute value.
     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
     */

/**
     * Public method to remove the configuration
     * clearConfig
     *
     */

/**
     * Public method to set the configuration once
     * setConfig
     *
     * @param {Object} cfg configuration object
     */

/**
     * RemoveAllHooks
     * Public method to remove all DOMPurify hooks
     *
     */

/**
     * RemoveHook
     * Public method to remove a DOMPurify hook at a given entryPoint
     * (pops it from the stack of hooks if more are present)
     *
     * @param {String} entryPoint entry point for the hook to remove
     */

/**
     * RemoveHooks
     * Public method to remove all DOMPurify hooks at a given entryPoint
     *
     * @param  {String} entryPoint entry point for the hooks to remove
     */

/**
     * Render only first frame, ignoring animations and mouse.
     * @param options - Rendering options.
     */

/**
     * Resize SVG to fit in given size.
     * @param width
     * @param height
     * @param preserveAspectRatio
     */

/**
     * Sanitize
     * Public method providing core sanitation functionality
     *
     * @param {String|Node} dirty string or DOM node
     * @param {Object} configuration object
     */

/**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

/**
     * Start rendering.
     * @param options - Render options.
     */

/**
     * Stop rendering.
     */

/**
     * Version label, exposed for easier checks
     * if DOMPurify is up to date or not
     */

/**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.6.0): tools/sanitizer.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.6.0): util.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */

/**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */

/**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */

/**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Create Canvg instance from SVG source string or URL.
   * @param ctx - Rendering context.
   * @param svg - SVG source string or URL.
   * @param options - Rendering options.
   */

/**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */

/**
   * Creates a no-op policy for internal use only.
   * Don't export this function outside this module!
   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.
   * @param {Document} document The document object (to determine policy name suffix)
   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types
   * are not supported).
   */

/**
   * Filter the unique values into a new array
   * @param arr
   */

/**
   * Hides loader and shows back the button which was hidden by .showLoading()
   */

/**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */

/**
   * Main constructor.
   * @param ctx - Rendering context.
   * @param svg - SVG Document.
   * @param options - Rendering options.
   */

/**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */

/**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */

/**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */

/**
   * Returns an extended version of `Swal` containing `params` as defaults.
   * Useful for reusing Swal configuration.
   *
   * For example:
   *
   * Before:
   * const textPromptOptions = { input: 'text', showCancelButton: true }
   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
   *
   * After:
   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
   * const {value: firstName} = await TextPrompt('What is your first name?')
   * const {value: lastName} = await TextPrompt('What is your last name?')
   *
   * @param mixinParams
   */

/**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */

/**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */

/**
   * Set type, text and actions on popup
   *
   * @param params
   * @returns {boolean}
   */

/**
   * Shows loader (spinner), this is useful with AJAX requests.
   * By default the loader be shown instead of the "Confirm" button.
   */

/**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */

/**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */

/**
   * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

/**
   * Updates popup parameters.
   */

/**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */

/**
 *
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */

/**
 * @license
  Copyright (c) 2008, Adobe Systems Incorporated
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are
  met:

  * Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.
  
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the 
    documentation and/or other materials provided with the distribution.
  
  * Neither the name of Adobe Systems Incorporated nor the names of its 
    contributors may be used to endorse or promote products derived from 
    this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
 * @license
 *
 * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/**
 * @license
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * (c) Dean McNamee <dean@gmail.com>, 2013.
 *
 * https://github.com/deanm/omggif
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,
 * including animation and compression.  It does not rely on any specific
 * underlying system, so should run in the browser, Node, or Plask.
 */

/**
 * @license
 * ====================================================================
 * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
 *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Hall, james@parall.ax
 *               2014 Diego Casorran, https://github.com/diegocr
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/**
 * @license
 * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2017 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2018 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2018 Erik Koopmans
 * Released under the MIT License.
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Copyright (c) 2019 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * FPDF is released under a permissive license: there is no usage restriction.
 * You may embed it freely in your application (commercial or not), with or
 * without modifications.
 *
 * Reference: http://www.fpdf.org/en/script/script37.php
 */

/**
 * @license
 * FileSaver.js
 * A saveAs() FileSaver implementation.
 *
 * By Eli Grey, http://eligrey.com
 *
 * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)
 * source  : http://purl.eligrey.com/github/FileSaver.js
 */

/**
 * @license
 * Joseph Myers does not specify a particular license for his work.
 *
 * Author: Joseph Myers
 * Accessed from: http://www.myersdaily.org/joseph/javascript/md5.js
 *
 * Modified by: Owen Leong
 */

/**
 * @license
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 * Author: Owen Leong (@owenl131)
 * Date: 15 Oct 2020
 * References:
 * https://www.cs.cmu.edu/~dst/Adobe/Gallery/anon21jul01-pdf-encryption.txt
 * https://github.com/foliojs/pdfkit/blob/master/lib/security.js
 * http://www.fpdf.org/en/script/script37.php
 */

/**
 * @license
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)
 * MIT License
 */

/**
 * @license
 * jsPDF fileloading PlugIn
 * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * jsPDF filters PlugIn
 * Copyright (c) 2014 Aras Abbasi
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @license
 * jsPDF virtual FileSystem functionality
 *
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */

/**
 * @param {HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {undefined}
 */

/**
 * @param {ImageData} imageData
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {ImageData}
 */

/**
 * @param {string|HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @throws {Error|TypeError}
 * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}
 */

/**
 * A class to parse color values
 * @author Stoyan Stefanov <sstoo@gmail.com>
 * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}
 * @license Use it if you like it
 */

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */

/**
 * Angle between two vectors.
 */

/**
 * Calculate the column widths
 */

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */

/**
 * Compress data with Zlib
 * @param data The data to compress
 * @param opts The compression options
 * @returns The zlib-compressed version of the data
 */

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array): output data.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/

/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/

/**
 * Deflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must
 * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending
 * buffers and call [[Deflate#onEnd]].
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/

/**
 * Deflate.result -> Uint8Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

/**
 * Distribute resizeWidth on passed resizable columns
 */

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */

/**
 * Expands Zlib data
 * @param data The data to decompress
 * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.
 * @returns The decompressed version of the data
 */

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */

/**
 * HTML-safe compress white-spaces.
 * @param str - String to compress.
 */

/**
 * HTML-safe left trim.
 * @param str - String to trim.
 */

/**
 * HTML-safe right trim.
 * @param str - String to trim.
 */

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */

/**
 * Improved text function with halign and valign support
 * Inspiration from: http://stackoverflow.com/questions/28327510/align-text-right-using-jspdf/28433113#28433113
 */

/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|String): output data. When string output requested,
 *   each chunk will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/

/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH). By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/

/**
 * Inflate#push(data[, flush_mode]) -> Boolean
 * - data (Uint8Array|ArrayBuffer): input data
 * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE
 *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,
 *   `true` means Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. If end of stream detected,
 * [[Inflate#onEnd]] will be called.
 *
 * `flush_mode` is not needed for normal operation, because end of stream
 * detected automatically. You may try to use it for advanced things, but
 * this functionality was not tested.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/

/**
 * Inflate.result -> Uint8Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param).
 **/

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */

/**
 * Load a url into a page
 */

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */

/**
 * Measure selector specificity.
 * @param selector - Selector to measure.
 */

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */

/**
 * Normalize attribute name.
 * @param name - Attribute name.
 */

/**
 * Options preset for `OffscreenCanvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 */

/**
 * Options preset for `node-canvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 * @param config.canvas - `node-canvas` exports.
 * @param config.fetch - WHATWG-compatible `fetch` function.
 */

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */

/**
 * Parse external URL.
 * @param url - CSS url string.
 */

/**
 * Ratio between font size and font height. The number comes from jspdf's source code
 */

/**
 * Ratio between two vectors.
 */

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */

/**
 * SVG renderer on canvas.
 */

/**
 * Set properties.
 */

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */

/**
 * Streaming GZIP, Zlib, or raw DEFLATE decompression
 */

/**
 * Streaming Zlib decompression
 */

/**
 * String to numbers array.
 * @param str - Numbers string.
 */

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */

/**
 * Transform floats to integers in rgb colors.
 * @param color - Color to normalize.
 */

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

/**
 * Vector magnitude.
 */

/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/**
 * deflate(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate algorithm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 * - dictionary
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/

/**
 * deflateRaw(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/

/**
 * gzip(data[, options]) -> Uint8Array
 * - data (Uint8Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/

/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style
 */

/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight
 */

/**
 * inflate(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako');
 * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));
 * let output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/

/**
 * inflateRaw(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/

/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/

/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 * - `dictionary`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * const pako = require('pako')
 * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])
 * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * const inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/

/**
 * ungzip(data[, options]) -> Uint8Array|String
 * - data (Uint8Array): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

/**
* StackBlur - a fast almost Gaussian Blur For Canvas
*
* In case you find this class useful - especially in commercial projects -
* I am not totally unhappy for a small donation to my PayPal account
* mario@quasimondo.de
*
* Or support me on flattr:
* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.
*
* @module StackBlur
* @author Mario Klingemann
* Contact: mario@quasimondo.com
* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}
* Twitter: @quasimondo
*
* @copyright (c) 2010 Mario Klingemann
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/

/** ====================================================================
 * @license
 * jsPDF XMP metadata plugin
 * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @class */

/** @license
   * Copyright (c) 2017 Dominik Homberger

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

https://webpjs.appspot.com
WebPRiffParser dominikhlbg@gmail.com
*/

/** @license
 *
 * jsPDF - PDF Document creation from JavaScript
 * Version 2.3.1 Built on 2021-03-08T15:44:11.674Z
 *                      CommitID 00000000
 *
 * Copyright (c) 2010-2020 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
 *               2015-2020 yWorks GmbH, http://www.yworks.com
 *               2015-2020 Lukas Holländer <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX
 *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>
 *               2010 Aaron Spike, https://github.com/acspike
 *               2012 Willow Systems Corporation, willow-systems.com
 *               2012 Pablo Hess, https://github.com/pablohess
 *               2012 Florian Jenett, https://github.com/fjenett
 *               2013 Warren Weckesser, https://github.com/warrenweckesser
 *               2013 Youssef Beddad, https://github.com/lifof
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2013 Stefan Slonevskiy, https://github.com/stefslon
 *               2013 Jeremy Morel, https://github.com/jmorel
 *               2013 Christoph Hartmann, https://github.com/chris-rock
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Makes, https://github.com/dollaruw
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 Steven Spungin, https://github.com/Flamenco
 *               2014 Kenneth Glassey, https://github.com/Gavvers
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Contributor(s):
 *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
 *    kim3er, mfo, alnorth, Flamenco
 */

/** @license
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @license
 * MIT license.
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *               2014 Diego Casorran, https://github.com/diegocr
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @license
 * jsPDF addImage plugin
 * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
 *               2013 Chris Dowling, https://github.com/gingerchris
 *               2013 Trinh Ho, https://github.com/ineedfat
 *               2013 Edwin Alejandro Perez, https://github.com/eaparango
 *               2013 Norah Smith, https://github.com/burnburnrocket
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 James Robb, https://github.com/jamesbrobb
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/** @license
 jsPDF standard_fonts_metrics plugin
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 * MIT license.
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * ====================================================================
 */

/** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */

/** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */

/** @prop {Function} */

/** @prop {ModifierFn} */

/** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */

/** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */

/** @prop {number} order=100 - Index used to define the order of execution */

/** @prop {number} order=200 - Index used to define the order of execution */

/** @prop {number} order=300 - Index used to define the order of execution */

/** @prop {number} order=400 - Index used to define the order of execution */

/** @prop {number} order=500 - Index used to define the order of execution */

/** @prop {number} order=600 - Index used to define the order of execution */

/** @prop {number} order=700 - Index used to define the order of execution */

/** @prop {number} order=800 - Index used to define the order of execution */

/** @prop {number} order=850 - Index used to define the order of execution */

/** @prop {number} order=900 - Index used to define the order of execution */

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*** CLEAR_HASH(s); ***/

/*** FLUSH_BLOCK(s, 0); ***/

/*** FLUSH_BLOCK(s, 1); ***/

/*** FLUSH_BLOCK_ONLY(s, 0) ***/

/*** INSERT_STRING(s, s.strstart, hash_head); ***/

/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/

/*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/

/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/

/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/

/*** pqremove ***/

/************************************************************************/

/******/

/***/

/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/

/*.Code*/

/*.Dad*/

/*.Freq*/

/*.Len*/

/*== Z_NULL*/

/*============================================================================*/

/*BITS(1)*/

/*BITS(2)*/

/*BITS(4)*/

/*BITS(5)*/

/*BITS(8)*/

/*BITS(last.bits + last.op)*/

/*BITS(state.distbits)*/

/*BITS(state.extra)*/

/*BITS(state.lenbits)*/

/*MAX_DIST(s)*/

/*NIL*/

/*SMALLEST*/

/*TOO_FAR*/

/*UPDATE(state.check, put - _out, _out);*/

/*UPDATE(state.check, strm.next_out - _out, _out);*/

/*Z_NULL*/

/*Z_UNKNOWN*/

/*adler32(0L, Z_NULL, 0)*/

/*break*/

/*crc32(0L, Z_NULL, 0)*/

/*from1, from2, from3, ...*/

/*here.bits*/

/*here.op*/

/*here.val*/

/*int /2*/

/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/

/*max_insert_length*/

/*return*/

/*state.head.comm_max*/

/*state.head.name_max*/

/*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/

/*var captura={
                "tipo_declaracion":"",
                "formato":"",
                "status_gral":"",
                "declaracion":[]
            };
window.captura=captura;
*/

/*yield**/

/*yield*/

/*|| strm->zfree == (free_func)0*/

//

// 	kern + width / 2.0,

// 	segment.p0.x,

// 	segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y

// 	segment.p0.y,

// 	segment.p1.x,

// 	segment.p1.y

//                                   single quotes [2]

//                                   v           double quotes [3]

//                                   v           v        no quotes [4]

//                                   v           v        v

//                    output[_out++] = 0;

//                    output[_out++] = output[from++];

//                  continue top;

//                  do {

//                  from = _out - dist;

//                  output[_out++] = 0;

//                  } while (--len);

//                do {

//                if (len <= op - whave) {

//                if (op === 0) {

//                len -= op - whave;

//                }

//                } while (--op > whave);

//            output[put++] = 0;

//          Trace((stderr, "inflate.c too far\n"));

//          break;

//          copy -= state.whave;

//          do {

//          if (copy > left) { copy = left; }

//          if (copy > state.length) { copy = state.length; }

//          if (state.length === 0) { state.mode = LEN; }

//          left -= copy;

//          state.length -= copy;

//          } while (--copy);

//         * strstart == 0 && lookahead == 1 (input done a byte at time)

//         */

//        "inconsistent bit counts");

//        "inflate:         literal '%c'\n" :

//        "inflate:         literal 0x%02x\n", here.val));

//        "too many codes");

//        /* Very unlikely, but possible on 16 bit machine if

//        Call update_hash() MIN_MATCH-3 more times

//        init = WIN_INIT;

//        init = s->window_size - s->high_water;

//        more = wsize;

//        more--;

//        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,

//        s->last_lit));

//        s->opt_len, s->static_len));

//        s->static_len));

//        s.block_start >= s.w_size)) {

//        state.last ? " (last)" : ""));

//        state.length));

//        throw  new Error("slide too late");

//       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

//       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&

//       * bytes or up to end of window, whichever is less.

//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up

//       * to end of window, whichever is less.

//       */

//       s->compressed_len-7*last));

//       surrogate code points will be so rare in practice that it's not worth it.

//      /* High water mark at or above current data, but below current data

//      /* Previous high water mark below current data -- zero WIN_INIT

//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||

//      if (init > WIN_INIT)

//      if (init > s->window_size - s->high_water)

//      init = (ulg)curr + WIN_INIT - s->high_water;

//      init = s.window_size - curr;

//      s->high_water += init;

//      s->high_water = curr + init;

//      zmemzero(s->window + curr, (unsigned)init);

//      zmemzero(s->window + s->high_water, (unsigned)init);

//      }

//     String.fromCharCode.apply than Uint16Array.

//    "not enough room for search");

//    - Any

//    - If key is not up or down => not a dropdown command

//    - If trigger inside the menu => not a dropdown command

//    - Node.DOCUMENT_NODE

//    - Node.ELEMENT_NODE

//    const curr = s.strstart + s.lookahead;

//    documentElement of the parent window

//    else if (s->high_water < (ulg)curr + WIN_INIT) {

//    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {

//    if (s.block_start < 0) throw new Error("block gone");

//    if (s.high_water < curr) {

//    left            cost

//    length tree                 distance tree

//    let init = 0;

//    put_byte(s, (uch)((ush)(w) >> 8));

//    put_byte(s, (uch)((w) & 0xff));

//    put_byte(s, *buf++);

//    }

//   .css('--customProperty) (#3144)

//   .css('filter') (IE 9 only, #12537)

//   1. An object of properties

//   1. No key was specified

//   1. The entire cache object

//   2. A key and value

//   2. A string key was specified, but no value provided

//   2. The data stored at the key

//   For this function, we need the code point data.

//   The main index has the code unit data.

//   appreciated but is not required.

//   but not by others (comment: 8; processing instruction: 7; etc.)

//   claim that you wrote the original software. If you use this software

//   https://html.spec.whatwg.org/multipage/forms.html#category-listed

//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled

//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled

//   in a product, an acknowledgment in the product documentation would be

//   misrepresented as being the original software.

//   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set

//  && !nodeEnv

//  - And not a key in REGEXP_KEYDOWN => not a dropdown command

//  - If key is other than escape

//  - If space key => not a dropdown command

//  - Node

//  - Object

//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,

//  copy   count

//  if (s.high_water < s.window_size) {

//  ind      num         streak

//  ind    debt

//  last chunk         bitpos           bytes

//  len    dist   chain

//  literal                            lengths

//  put_byte(s, (Byte)(b & 0xff));

//  put_byte(s, (Byte)(b >> 8));

//  s->block_start >= (long)s->w_size, "slide too late");

//  while (len--) {

//  }

//  } else if (more == (unsigned)(-1)) {

// !!! pako patch. Force use `options.windowBits` if passed.

// "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."

// "Attribute values must be CSS identifiers [capture 5]

// "Whether an element is represented by a :lang() selector

// "consumed" by the delegate iterator. If context.method was

// "px" to a few hardcoded values.

// "return" to "throw", let that override the TypeError below.

// "return", allow the original .return call to continue in the

// "~~" acts like a faster Math.floor() here

// #1246

// #1450: sometimes IE returns 1223 when it should be 204

// #14683: Only rethrow if this hasn't been notified as an error yet

// #1699

// #1786

// #1891

// #1926

// #1944

// #2170

// #720 #721

// #9682: remove data so that it's not used in an eventual retry

// ( OP | HY ) × NU

// ( event )  dispatched jQuery.Event

// ( namespace ) or ( selector, types [, fn] )

// ( types [, fn] )

// ( types, data, fn )

// ( types, fn )

// ( types, selector, fn )

// ( types-Object, data )

// ( types-Object, selector, data )

// ( types-object [, selector] )

// (!) This block is disabled in zlib defaults,

// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)

// (C) 1995-2013 Jean-loup Gailly and Mark Adler

// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin

// (PR | PO) × ( OP | HY )? NU

// (and therefore has an element appears at this[ 0 ]) and the

// (as if it's the second time we tap on it, mouseenter compat event

// (avoids potential for endless recursion during removal of special event handlers)

// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)

// (excepting DocumentFragment context, where the methods don't exist)

// (excepting IE8 booleans)

// (focus and blur are always synchronous in other supported browsers,

// (focus or blur), assume that the surrogate already propagated from triggering the

// (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)

// (i.e., `typeof document.createElement( "object" ) === "function"`).

// (it can always be set on a per-request basis or even using ajaxSetup)

// (no matter how long the jqXHR object will be used)

// (returning the new matched element set)

// (such as Node.js), expose a factory as module.exports.

// (the latter of which guarantees us context)

// (via `this.document`) & document (via `this`).

// (we check in cache first)

// );

// * false: [ value ].slice( 0 ) => resolve( value )

// * listed form-associated elements in a disabled fieldset

// * option elements in a disabled optgroup

// * true: [ value ].slice( 1 ) => resolve()

// *native* events that it fires directly, ensuring that state changes have

// - (very small limits) return max size as is.

// - No support for border spacing

// - No support for transparency

// - apply(Array) can fail on Android 2.2

// - apply(Uint8Array) can fail on iOS 5.1 Safari

// - no need for additional size check

// ----------------------------------------------------------------------

// ... .then handlers, argument index, [final state]

// ...and capture the result

// ...and disregard older resolution values

// ...but misinterprets leading-number strings, particularly hex literals ("0x...")

// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)

// ...in a gzip-friendly way

// ...intermediate processing is necessary

// ...otherwise use results directly

// .constructor.prototype properties for functions that return Generator

// .get() because push.apply(_, arraylike) throws on ancient WebKit

// .offsetParent will return the closest TH, TD or TABLE in case

// .throw, and .return (see defineIteratorMethods).

// .throw, and .return methods.

// 1 degree resolution

// 1) For the element inside the iframe without offsetParent, this method will return

// 1. Copy private data: events, handlers, etc.

// 1. The origin of this software must not be misrepresented; you must not

// 1. the background and borders of the element forming the stacking context.

// 1. using .parentNode instead of event.path because of better support by old browsers https://stackoverflow.com/a/39245638

// 1.5.3 so we need to silence potential errors to support using for example

// 10ms in order to fix #2062

// 16 bit data is stored in the index array itself.

// 2 ** 53 - 1 == 9007199254740991

// 2) For the hidden or detached element

// 2. Altered source versions must be plainly marked as such, and must not be

// 2. Copy user data

// 2. using .parentNode instead of .parentElement because of IE11 + SVG https://stackoverflow.com/a/36270354

// 23.1.3.1 Map.prototype.clear()

// 23.1.3.3 Map.prototype.delete(key)

// 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11

// 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)

// 23.1.3.6 Map.prototype.get(key)

// 23.1.3.7 Map.prototype.has(key)

// 23.1.3.9 Map.prototype.set(key, value)

// 23.2.3.1 Set.prototype.add(value)

// 23.2.3.2 Set.prototype.clear()

// 23.2.3.4 Set.prototype.delete(value)

// 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)

// 23.2.3.7 Set.prototype.has(value)

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()

// 25.4.1.5 NewPromiseCapability(C)

// 25.4.3.1 Promise(executor)

// 3) For body or html element, i.e. in case of the html node - it will return itself

// 3. For all its in-flow, non-positioned, block-level descendants in tree order:

// 3. This notice may not be removed or altered from any source distribution.

// 4 = theta

// 7.4.6 IteratorClose(iterator, completion)

// :(first|last|only)-(child|of-type)

// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),

// <math> and HTML integration points

// <object> elements with no `data` attribute has an object

// <optgroup> spec:

// === Z_NULL

// >>> 0;

// ?

// ? alpha

// @@iterator function is called on it. Some browsers' implementations of the

// @deprecated

// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805

// @see https://github.com/webpack-contrib/style-loader/issues/177

// @ts-ignore

// A .throw or .return when the delegate iterator has no .throw

// A Generator should always return itself as the iterator object when the

// A central reference to the root jQuery(document)

// A counter to track how many items to wait for before

// A cross-domain request is in order when the origin doesn't match the current origin.

// A fallback to window.onload, that will always work

// A global GUID counter for objects

// A match means we're done; a fail means we have to keep checking

// A simple way to check for HTML strings

// A special extend for ajax options

// A tribute to the "awesome hack by Dean Edwards"

// ARIA label

// Abort any current/pending executions

// Abort any pending executions

// Abort handling of the native event

// Abort if not done already and return

// Abort if there are pending holds or we're already ready

// Aborting is no longer a cancellation

// Accept quoted arguments as-is

// Accepts only:

// Accessing document.activeElement can throw unexpectedly

// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)

// Accessing the selectedIndex property

// Accessing this property makes selected-by-default

// Account for positive content-box scroll gutter when requested by providing computedVal

// Account for the *real* offset parent, which can be the document or its root element

// Account for unreliable border-box dimensions by comparing offset* to computed and

// Actions (buttons) wrapper

// Actual Callbacks object

// Actual callback list

// Actually, we don't need it in JS,

// Add a callback or a collection of callbacks to the list

// Add a progress sentinel to prevent the fx queue from being

// Add button/input type pseudos

// Add buttons custom classes

// Add elements passing elementMatchers directly to results

// Add elements to results, through postFinder if defined

// Add in properties whose names you wish to fix before

// Add in style property hooks for overriding the default

// Add list-specific methods

// Add matches to results

// Add nodes directly

// Add one pt to textSpace to fix rounding error

// Add or update anti-cache param if needed

// Add padding

// Add paddings

// Add position, width and height to our offsets object

// Add properties to offsets to make them a complete clientRect object

// Add protocol if not provided (prefilters might expect it)

// Add the old object onto the stack (as a reference)

// Add the remaining (directly-bound) handlers

// Add the top/left cssHooks using jQuery.fn.position

// Add to body both if parent is tbody or table

// Add to the element's handler list, delegates in front

// Add user content just before adding new page ensure it will

// Adding a temporary attribute to the document before the selection works

// Adjust body padding

// Adjust fixed content padding

// Adjust for the element's box model

// Adjust sticky content margin

// Adjustment may not be necessary

// Alias method option to type as per ticket #12004

// Align the top

// All done!

// All others

// All such elements have a "form" property.

// Allow custom headers/mimetypes and early abort

// Allow instantiation without the 'new' keyword

// Allow onerror to be called first,

// Allow special events to draw outside the lines

// Allow the callers to control the unique policy name

// Allows developers to see this is a property they can set

// Also disable .add unless we have memory (since it would have no effect)

// Also prevent it if we're currently inside a leveraged native-event stack

// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)

// Also, save errorCallback to a variable

// Always assume duplicates if they aren't passed to the comparison function

// Always return an empty object.

// Always skip document fragments

// Always use camelCase key (gh-2257)

// An input loses its value after becoming a radio

// An invalid date object returns NaN for getTime() and NaN is the only

// Anchor tag for parsing the document origin

// Anchor's host property isn't correctly set when s.url is relative

// Android Browser returns percentage for some values,

// Animate icon

// Animate inline elements as inline-block

// Animate popup right after showing it

// Animations created synchronously will run synchronously

// Any relative (+/-) values have already been

// Append to fragment

// Apply `position` to popper before anything else because

// Apply converter (if not an equivalence)

// Apply custom fields if provided

// Apply postFilter

// Apply prefilters

// Apply relative offset (+=/-=) if specified

// Apply set filters to unmatched elements

// Apply the dataFilter if provided

// Approximates by breaking curve into 100 line segments

// Approximates by breaking curve into line segments

// Argument "data" should be string of html

// Array#includes uses SameValueZero equality algorithm

// Array#indexOf ignores holes, Array#includes - not

// Arraylike of elements (jQuery, arguments, Array)

// As in, an element does not contain itself

// As of jQuery 3.0, isNumeric is limited to

// As per issue #47, the web-components registry is inherited by a

// As well, disconnected nodes are said to be in a document

// Assert (s->compressed_len == s->bits_sent, "bad compressed size");

// Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

// Assert(*scan == *match, "match[2]?");

// Assert(buf != (char*)0, "lost buf");

// Assert(cur_match < s->strstart, "no future");

// Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

// Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

// Assign false to enable `doc.lastAutoTable.finalY || 40` sugar

// Assign instance methods from src/instanceMethods/*.js to prototype

// Assign static methods from src/staticMethods/*.js to constructor

// Assign the result of the finished delegate to the temporary

// Assign to newCache so results back-propagate to previous elements

// Assign undefined instead of using delete, see Data#remove

// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes

// Assume jQuery is ready without the ready module

// Assume position:fixed implies availability of getBoundingClientRect

// Assume that strings that start and end with <> are HTML and skip the regex check

// Assumes a single number if not a string

// Assumes roughly 33% compression ratio average

// Assuming integer scroll gutter, subtract the rest and round down

// AsyncIterator objects; they just return a Promise for the value of

// Attach a single capturing handler on the document while someone wants focusin/focusout

// Attach callbacks from options

// Attach deferreds

// Attach marginTop and marginLeft because in some circumstances we may need them

// Attempt to "discover" the data in

// Attempt to get data from the cache

// Attribute hooks are determined by the lowercase version

// Attribute names can contain non-HTML whitespace characters

// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors

// Attributes

// Avoid an infinite loop by temporarily removing this function from the getter

// Avoid bugs when hasOwnProperty is shadowed

// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression

// Avoid hanging onto element (issue #299)

// Avoid propagating failures to Promises returned by later

// Avoid unnecessary DOM access if visibility hasn't changed

// BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

// BFINAL - this is only 1 when last chunk is next

// BMP uses a single level lookup.  BMP index starts at offset 0 in the Trie2 index.

// Back compat <1.8 extension point

// Background

// Bail out if this is a no-op like .hide().hide()

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

// Base inspection function for prefilters and transports

// Base style for all themes

// Based off of the plugin by Clint Helfers, with permission.

// Be aware, modifiers could override the properties defined in the previous

// Be forgiving, per 25.3.3.3.3 of the spec:

// Because of that, this security measure has to be disabled in Safari 8.

// Behaves like an Array's method, not like a jQuery method.

// Behavior in IE 9 is more subtle than in newer versions & it passes

// Bind a function to a context, optionally partially applying any

// Bind script tag hack transport

// Black for versions of jspdf without getTextColor

// Black-hole SVG <use> instance trees (trac-13180)

// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347

// Boolean attributes and "value" are not treated correctly

// Boolean properties

// Both box models exclude margin

// Both nodes are inside #document

// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)

// Build QSA regex

// Build a new jQuery matched element set

// Building a settings object

// Builds headers hashtable if needed

// Bulk operations run against the entire set

// But breaks binary compatibility

// But maintain support for old signatures

// Buttons background colors

// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/arrayLikeToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/arrayWithHoles.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/arrayWithoutHoles.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/assertThisInitialized.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/asyncToGenerator.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/classCallCheck.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/createClass.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/get.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/getPrototypeOf.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/inherits.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/iterableToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/iterableToArrayLimit.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/nonIterableRest.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/nonIterableSpread.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/setPrototypeOf.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/slicedToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/superPropBase.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/toConsumableArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/typeof.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs3/helpers/esm/unsupportedIterableToArray.js

// CONCATENATED MODULE: ./node_modules/canvg/lib/index.es.js

// CONCATENATED MODULE: ./node_modules/fflate/esm/browser.js

// CONCATENATED MODULE: ./node_modules/jspdf/dist/jspdf.es.min.js

// CONCATENATED MODULE: ./node_modules/stackblur-canvas/dist/stackblur-es.js

// CONCATENATED MODULE: ./src/js/main.js

// CP1 = QP0 + 2/3 *(QP1-QP0)

// CP2 = CP1 + 1/3 *(QP2-QP0)

// CSP to forbid Function, and you're not willing to fix either of those

// CSS escapes

// CSS string/identifier serialization

// Cache response headers

// Cache the compiled function

// Cache the index of each encountered element

// Cache the tokens

// Caches the header

// Calculate max possible position in utf8 buffer,

// Calculate points

// Calculate position if both inputs belong to the same document

// Call a native DOM method on the target with the same name as the event.

// Call all callbacks with the given context and arguments

// Call all the callbacks with the given arguments

// Call an optional hook to record the stack, in case of exception

// Call delegate.iterator[context.method](context.arg) and handle the

// Call given func if any

// Call if it was a function and we have a response

// Call the postDispatch hook for the mapped type

// Call the preDispatch hook for the mapped type, and let it bail if desired

// Callback

// Callback for when everything is done

// Callbacks context

// Caller can pass in a jQuery.Event object, Object, or just an event type string

// Caller can pass in an object of custom data in lieu of the handler

// Can add propHook for "elements" to filter or add form elements

// Can be adjusted by the user

// Can find the shadow root otherwise it'll return the document

// Can foresee having a rough pair table built in that the developer can override as needed.

// Can use an empty set, since event contains the info

// Can't trust NodeList.length

// Cancel the outer synthetic event

// Cancel the request

// Capture executables

// Capture the context ID, setting it first if necessary

// Cast descendant combinators to space

// Catch cases where $(document).ready() is called

// Certain elements are allowed in both SVG and HTML

// Certain elements can have dimension info if we invisibly show them

// Check against all ancestor/preceding elements

// Check against closest ancestor/preceding element

// Check attachment across shadow DOM boundaries when possible (gh-3504)

// Check each className given, space separated list

// Check for headers option

// Check for inherited disabledness on relevant non-disabled elements:

// Check for promise aspect first to privilege synchronous behavior

// Check for the existence of Promise

// Check for vendor prefixed names

// Check if a given callback is in the list.

// Check if a regular expression validates the attribute.

// Check if b follows a

// Check if getElementById returns elements by name

// Check if getElementsByTagName("*") returns only elements

// Check if it's jQuery element

// Check if module is in cache

// Check if the owner object already has a cache

// Check if there is a swal disposal defer timer

// Check if there is another Swal closing

// Check if we're dealing with a known content-type

// Check if we're setting a value

// Check readyState before timeout as it changes

// Check state lost if the name is set (#11217)

// Check to see if it's possible to do matchesSelector

// Check to see if we have a response for the expected dataType

// Choose the first element that is related to our preferred document

// Chrome 38 Symbol has incorrect toString conversion

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives

// Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances

// Chrome scrolls the parent document for some reason after the write to the cloned window???

// Claim the first handler

// Class

// Class selector

// Classes

// Clean up if we're done firing for good

// Clean up the event in case it is being reused

// Clean up the old popup container if it exists

// Clean-up function (fires after converters)

// Clear all callbacks and values

// Clear input after sorting to release objects

// Clear queue here to prevent

// Clear timeout if it exists

// Clear up the last queue stop function

// Clone any incoming data and prepend the event, creating the handler arg list

// Close button

// Closing toast by internal click

// Coalesce documents and windows

// Coerce string values

// Combinators

// Comma and first run

// Common issue was that the default bold in headers

// Compile and execute a filtering function if one is not provided

// Complete

// Compute the ratio ry/rx (which is to be the same as for "closest-side")

// Compute the ratio ry/rx (which is to be the same as for "farthest-side")

// Compute the sideValue using the updated popper offsets

// Computed height then comes back as 0.

// Condense equivalence converters

// Config presets (e.g. tags.js, attrs.js) are immutable.

// Console exists when dev tools are open, which can happen at any time

// Content as HTML

// Content is a DOM node or a jQuery

// Contents

// Context for global events is callbackContext if it is a DOM node or jQuery collection

// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:

// Convert "+=" or "-=" to relative numbers (#7345)

// Convert "normal" to computed value

// Convert String-formatted options into Object-formatted ones

// Convert anything to text

// Convert dashed to camelCase; used by the css and data modules

// Convert data if needed

// Convert data if not already a string

// Convert html into DOM nodes

// Convert no matter what (that way responseXXX fields are always set)

// Convert non-html into a text node

// Convert options from String-formatted to Object-formatted if needed

// Convert response if prev dataType is non-auto and differs from current

// Convert the values with units to absolute pixels to allow our computations

// Convert to each sequential dataType

// Convert to pixels if value adjustment is needed

// Copy over uncompressed data

// Copy the events from the original to the clone

// Copy the properties one-by-one to the cache object

// Could probably be improved upon however.

// Counter for holding the number of active queries

// Create a new module (and put it into the cache)

// Create a timestamp if incoming event doesn't have one

// Create converters map with lowercased keys

// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods

// Create mouseenter/leave events using mouseover/out and event-time checks

// Create scrollLeft and scrollTop methods

// Create table on load. Just 255 signed longs. Not a problem.

// Create target properties

// Create the abort callback

// Create the final options object

// Creates a full fledged settings object into target

// Cross domain only allowed if supported through XMLHttpRequest

// Cross-browser xml parsing

// Custom class

// Custom or default content

// Cycle to the next button

// Cycle to the prev button

// DEFLATE header

// DEFLATE is a complex format; to read this code, you should probably check the RFC first:

// DOM element

// Data converters

// Deep merge modifiers options

// Default Class + showClass when updating Swal.update({})

// Default abort message

// Default algorithm for compression (used because having a known output size allows faster decompression)

// Default false

// Default jsonp settings

// Default process is resolve

// Default speed

// Default true

// Default value for a checkbox should be "on"

// Defend against cloned attroperties (jQuery gh-1709)

// Deferred helper

// Deferred#then to conditionally suppress rejection.

// Deferreds

// Define Generator.prototype.{next,throw,return} in terms of the

// Define a local copy of jQuery

// Define the hook, we'll check on the first run if it's really needed.

// Define the unified helper method that is used to implement .next,

// Defining this global in .eslintrc.json would create a danger of using the global

// Delegate to script

// Deliberately forget the last sent value so that we don't

// Deprecated

// Deprecated, use pageNumber instead

// Dereference transport for early garbage collection

// Descend through wrappers to the right content

// Deserialize a standard representation

// Detach an event or set of events from an element

// Detached nodes confoundingly follow *each other*

// Detect IE8's incomplete defineProperty implementation

// Detect correctness of subclassing with @@species support

// Detect misreporting of content dimensions for box-sizing:border-box elements

// Detect obvious negatives

// Detect overflow:scroll screwiness (gh-3699)

// Detect show/hide animations

// Detect silently failing push.apply

// Detect, normalize options and install callbacks for jsonp requests

// Determine event propagation path in advance, per W3C events spec (#9951)

// Determine handlers

// Determine if request has content

// Determine if successful

// Determine if the custom target element is valid

// Determine new display value for elements that need to change

// Determine the position of an element within the set

// Disable .fire

// Disable .fire and .add

// Disable Popper if we have a static display

// Discard index placeholder values to get only actual matches

// Discard the second event of a jQuery.event.trigger() and

// Disconnected elements can have computed display: none, so first confirm that elem is

// Disconnected nodes

// Dispatch the exception by looping back around to the

// Do a sibling check if the nodes have a common ancestor

// Do not calc bounding box if mouse is not working.

// Do not include comment or processing instruction nodes

// Do not set a placeholder for <input type="range">

// Do not traverse comment nodes

// Do send the request (this may raise an exception)

// Do the same for pointerenter/pointerleave and pointerover/pointerout

// Document context

// Document order sorting

// Don't automatically add "px" to these possibly-unitless properties

// Don't call next when the page isn't visible

// Don't check non-elements (#13208)

// Don't conflict with Object.prototype properties (#13203)

// Don't consume trailing commas as valid

// Don't do default actions on window, that's where global variables be (#6170)

// Don't do events on text and comment nodes

// Don't enum bug & hidden keys

// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)

// Don't get fooled by Object.prototype properties (jQuery #13807)

// Don't get tricked when zoom affects offsetWidth (gh-4029)

// Don't get/set attributes on text, comment and attribute nodes

// Don't get/set properties on text, comment and attribute nodes

// Don't keep the element (issue #299)

// Don't match elem in the :animated selector

// Don't move modal's DOM position

// Don't need mem init magic for JS.

// Don't pass non-elements to Sizzle

// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)

// Don't re-trigger an onFOO event when we call its FOO() method

// Don't return options that are disabled or in a disabled optgroup

// Don't set styles on text and comment nodes

// Double or set to necessary, whichever is greater

// Down

// Draws a line at the baseline of the font

// Dummy constructor functions that we use as the .constructor and

// ELEMENT_NODE

// ENTER

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/instance/fill.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/instance/some.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/instance/starts-with.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/object/define-property.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js-stable/reflect/delete-property.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/array/from.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/instance/slice.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/is-iterable.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/object/define-property.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/object/get-prototype-of.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/symbol.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs3/core-js/symbol/iterator.js

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/sweetalert2.min.css

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/tema.css

// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js

// Early iOS 10 versions support `attachShadow` but not `getRootNode`,

// Easily-parseable/retrievable ID or TAG or CLASS selectors

// Easy API for creating new setFilters

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1

// Edge does not provide value for cssText

// Edge does not render background-images

// Element contains another

// Element context

// Element/input types

// Empty animations, or finishing resolves immediately

// Empty the queue first

// Enable finishing flag on private data

// Ended => flush and finish

// Enforce case-sensitivity of name attribute

// Enforce single-firing

// Ensure a hooks for this queue

// Ensure proper type for the source value

// Ensure that invalid selectors throw exceptions at attach time

// Ensure the complete handler is called before this completes

// Ensure the created nodes are orphaned (#12392)

// Ensure the presence of an event listener that handles manually-triggered

// Ensuring the div is display: block

// Evaluate against documentElement in case elem is a non-element node (e.g., document)

// Evaluate and update our best guess (doubling guesses that zero out).

// Evaluate executable scripts on first document insertion

// Evaluate text as a json expression

// Evaluates a script in a provided context; falls back to the global one

// Event object

// Events bubbling up the document may have been marked as prevented

// Exception thrown outside of any try block that could handle

// Exclude object elements

// Exclude scripts to avoid IE 'Permission Denied' errors

// Execute a callback for every element in the matched set.

// Execute callbacks for all pending executions,

// Execute immediately if ready is not present

// Execute the appropriate callbacks

// Execute the module function

// Executing both pixelPosition & boxSizingReliable tests require only one layout

// Exit early if the nodes are identical

// Expand context for sibling selectors

// Experimental export

// Exports

// Expose jQuery and $ identifiers, even in AMD

// Expose support vars for convenience

// Extend jQuery itself if only one argument is passed

// Extend the base object

// Extend with the prototype to reset the above stopImmediatePropagation()

// Extending ajaxSettings

// Extract dataTypes list

// Extract error from statusText and normalize for non-aborts

// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)

// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"

// FF44- legacy iterators case

// Fails to persist the checked state of a cloned checkbox or radio button.

// Fake xhr

// Fall back on getElementsByName

// Fall back to offsetWidth/offsetHeight when value is "auto"

// Fall through.  The code point is outside of the legal range of 0..0x10ffff.

// Fallback to prop when attributes are not supported

// Fallback to seeking `elem` from the start

// Fetch a seed set for right-to-left matching

// File protocol always yields status code 0, assume 200

// File: protocol always yields status 0; see #8605, #14207

// Fill with NIL (= 0);

// Filter out possible comments

// Filters

// Finalize if end of stream reached.

// Find delegate handlers

// Find primary matches

// Find such segment what distance between p0 and p1 is approx. width of glyph

// Find the next relative operator (if any) for proper handling

// Finish early in limited (non-browser) environments

// Finish if the scale equals or crosses 1 (making the old*new product non-positive).

// Fire an inner synthetic event with the original arguments

// Fire callbacks

// Fire handlers on the event path

// Firefox 55 does not render inline <img /> tags

// Firefox doesn't alert if the returnValue field is not set.

// Firefox doesn't have focus(in | out) events

// Firefox want us to check `-x` and `-y` variations as well

// Fix IE bugs, see support tests

// Fix IE cloning issues

// Fix name and attach hooks

// Fixes #9887

// Fixes bug #9237

// Flag for duplicate removal

// Flag the module as loaded

// Flag to know if list is currently firing

// Flag to know if list was already fired

// Flag to prevent firing

// Flatten any nested arrays

// Flush if out buffer full

// Flush if requested and has data

// Font style needs to be applied before font

// For "border" or "margin", add border

// For "content" or "padding", subtract border

// For "content", subtract padding

// For CommonJS and CommonJS-like environments where a proper `window`

// For Promises/A+, convert exceptions into rejections

// For XHR2 non-text, let the caller handle it (gh-2498)

// For cross-browser consistency, suppress native .click() on links

// For cross-domain requests, seeing as conditions for a preflight are

// For each dataType in the dataTypeExpression

// For environments that do not have a `window` with a `document`

// For internal use only.

// For mouseenter/leave call the handler if related is outside the target.

// For mutual compressibility with _default, replace `this` access with a local var.

// For now we ignore the minWidth and wrappedWidth of colspan cells when calculating colspan widths.

// For old IE

// For options that shouldn't be deep extended:

// For same-domain requests, won't change header if already provided.

// For supplementary characters, a useful default is to treat characters in the range 10000..1FFFD as AL

// For the native GeneratorFunction constructor, the best we can

// For use in libraries implementing .is()

// For values outside the Basic Multilingual Plane (BMP), manually construct a

// Force browsers to behave consistently when non-matching value is set

// Force callback invocation

// Force json dataType

// Force options to be an object

// Force setup before trigger

// Force setup before triggering a click

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>

// Force window size for `raw` data, if not set directly,

// Forget the data if we're done with it

// From zutil.h

// GZIP header

// Gecko does not error, returns false instead

// GenStateExecuting and loop back for another invocation.

// General show/hide setup for this element animation

// Generate a function of recursive functions that can be used to check each element

// Generate parameters to create a standard animation

// Generate shortcuts for custom animations

// Generated by CoffeeScript 1.12.2

// Get a promise for this deferred

// Get a promise resolved when queues of a certain type

// Get and set the style property on a DOM Node

// Get callback name, remembering preexisting value associated with it

// Get document width or height

// Get document-relative position by adding viewport scroll to viewport-relative gBCR

// Get excess from tokenize (recursively)

// Get initial elements from seed or context

// Get new bitpos, update byte count

// Get nonempty value(s) by temporarily forcing visibility

// Get popper node sizes

// Get response data

// Get rid of `auto` `auto-start` and `auto-end`

// Get the Nth element in the matched element set OR

// Get the final matcherOut by condensing this intermediate into postFinder contexts

// Get the specific value for the option

// Get the whole matched element set as a clean array

// Get transition-duration of the element

// Get transport

// Get width or height on the element, requesting but not forcing parseFloat

// Gets

// Gets all values

// Gets hook for the prefixed version, then unprefixed version

// Getters

// Give the init function the jQuery prototype for later instantiation

// Global attributes allowed on any supplied element below.

// Go through every key on the object,

// Go through the array, only saving the items

// Go through the array, translating each of the items to their new values

// Go to the end state if fx are off

// Goto emulation

// Grab necessary hook if one is defined

// Guard against undefined "subtract", e.g., when used as in cssHooks

// Gzip header has no info about windows size, we can do autodetect only

// HANDLE: $(""), $(null), $(undefined), $(false)

// HANDLE: $(#id)

// HANDLE: $(DOMElement)

// HANDLE: $(expr, $(...))

// HANDLE: $(html) -> $(array)

// HANDLE: $(html, props)

// HTML integration points, and from MathML to HTML

// HTML namespace.

// HTML, SVG or MathML). Return false just in case.

// HTML5 custom data-* attrs

// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)

// Handle HTML strings

// Handle a deep copy situation

// Handle a returned thenable

// Handle cache's special case and crossDomain

// Handle case when target is a string or something (possible in deep copy)

// Handle dropup

// Handle event binding

// Handle falsy url in the settings object (#10093: consistency with old signature)

// Handle firing indexes

// Handle iff the expected data type is "jsonp" or we have a parameter to set

// Handle it asynchronously to allow scripts the opportunity to delay ready

// Handle most common string cases

// Handle multiple events separated by a space

// Handle other cases based on DOM element used as boundaries

// Handle special case when .nav-link is inside .nav-item

// Handle state

// Handle the global AJAX counter

// Handle viewport case

// Handle when the DOM is ready

// Handle: [ owner, key, value ] args

// Handle: [ owner, { properties } ] args

// Handle: regular nodes (via `this.ownerDocument`), window

// Headers (they are sent all at once)

// Height set through cssText does not get applied.

// Helper for a popular repeating case of the spec:

// Helper for defining the .next, .throw, and .return methods of the

// Here we make sure to give as "start" the element that comes first in the DOM

// Hide block with validation message

// Hook needed; redefine it so that the support test is not executed again.

// Hook not needed (or it's not possible to use it due

// Hooks for boolean attributes

// However, it is not slated for removal any time soon

// ID filter and find

// ID selector

// IE 11/Edge don't find elements on a `[name='']` query in some cases.

// IE 8 has a broken Object.defineProperty that only works on DOM objects.

// IE 9's matchesSelector returns false on disconnected nodes

// IE <=9 replaces <option> tags with their contents when inserted outside of

// IE doesn't have scrollX/scrollY support

// IE returns zIndex value as an integer.

// IE throws exception on accessing the href property if url is malformed,

// IE throws on elements created in popups

// IE throws on parseFromString with invalid input.

// IE's :disabled selector does not pick up the children of disabled fieldsets

// IE/Edge & older browsers don't support the :scope pseudo-class.

// IE/Edge misreport `getComputedStyle` of table rows with width/height

// IE/Edge sometimes throw a "Permission denied" error when strict-comparing

// IE10 10 FIX: Please, don't ask, the element isn't

// IE11

// IE8 returns string on undefined

// IE8 throws error here and will not see later tests

// IE8- don't enum bug keys

// IE8-9 doesn't update selected after form reset (#2551)

// IE9 has no XHR2 but throws on binary (trac-11426)

// Icon

// Icon class (#1842)

// Icon color

// Identify a display type, preferring old show/hide data over the CSS cascade

// If "type" variable is undefined, then "GET" method will be used.

// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate

// If a hook was provided get the computed value from there

// If a hook was provided get the non-computed value from there

// If a hook was provided, use that value, otherwise just set the specified value

// If a normal DOM Ready event fired, decrement, and wait if need be

// If a number was passed in, add the unit (except for certain CSS properties)

// If a rejected Promise was yielded, throw the rejection back

// If a selector was specified, locate the right elements in a dummy div

// If an array was passed in, assume that it is an array of form elements.

// If an exception is thrown from innerFn, we leave state ===

// If animation is supported, animate

// If boundary is not `scrollParent`, then set position to `static`

// If context.method was "throw" but the delegate handled the

// If conv2 outputs current

// If curCSS returns percentage, fallback to offset

// If data is available and should be processed, append data to url

// If divider is found, we divide the list of values and operands to divide

// If enqueue has been called before, then we want to wait until

// If event changes its type, use the special event handlers for the changed type

// If input/textarea:

// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

// If it is a node unlikely to be stringify-ed or looped over

// If it receives a jQuery object, the first element is used

// If it's a function

// If it's a touch-enabled device, mouseenter/leave are fired as

// If it's not a number it's an operator, I guess

// If key is an array of keys...

// If maybeInvokeDelegate(context) changed context.method from

// If multiple durations are defined, take the first

// If no argument is given, return whether or not list has callbacks attached.

// If no head or foot is set, try generating it with content from columns

// If no nodeType, this is expected to be an array

// If no transport, we auto-abort

// If nobody prevented the default action, do it now

// If none found, seek a pair

// If not input/textarea:

// If not, create one

// If nothing was found internally, try to fetch any

// If obj is provided, the promise aspect is added to the object

// If offsetParent is the reference element, we really want to

// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.

// If prev can be converted to accepted input

// If previous value didn't exist - remove it

// If request was aborted inside a prefilter, stop there

// If request was aborted inside ajaxSend, stop there

// If seed is empty or no tokens remain, we can return early

// If selector defined, determine special event api type, otherwise given type

// If set returns undefined, fall back to normal setting

// If some font will be loaded after this method call, <textPath> will not be rendered correctly.

// If successful, handle type chaining

// If target is omitted, writes into ajaxSettings.

// If the background-size is auto or auto auto:

// If the delegate iterator has a return method, give it a

// If the dispatched exception was caught by a catch block,

// If the element has a class name or if we're passed `false`,

// If the event is namespaced, then each handler is only invoked if it is

// If the fx queue is dequeued, always remove the progress sentinel

// If the image has both horizontal and vertical intrinsic dimensions, it's rendered at that size.

// If the image has intrinsic proportions, it's stretched to the specified dimension.

// If the image has no intrinsic dimensions and has no intrinsic proportions,

// If the image has no intrinsic proportions, it's stretched to the specified dimension.

// If the image has only one intrinsic dimension and has intrinsic proportions, it's rendered at the size corresponding to that one dimension.

// If the length of the buffer is smaller than that, we can use this optimization,

// If the nodes are siblings, we can do a quick check

// If the preceding token was a descendant combinator, insert an implicit any-element `*`

// If the selector is sufficiently simple, try using a "get*By*" DOM method

// If the shape is an ellipse, it exactly meets the closest side in each dimension.

// If the shape is an ellipse, the ending shape is given the same aspect ratio it would have if farthest-side were specified.

// If the shape is an ellipse, the ending shape is given the same aspect-ratio it would have if closest-side were specified.

// If there are functions bound, to execute

// If there is an error parsing the URL, assume it is crossDomain,

// If there's more to do, yield

// If this is a native event triggered above, everything is now in order

// If this is a positional/relative selector, check membership in the returned set

// If this is a touch-enabled device we add extra

// If this is a touch-enabled device we remove the extra

// If this is an inner synthetic event for an event with a bubbling surrogate

// If this was an empty animation, synthesize a final progress notification

// If traditional, encode the "old" way (the way 1.3.2 or older

// If url is an object, simulate pre-1.5 signature

// If value is a function, invoke it and use its return value

// If we are going to the end, we want to run all the tweens

// If we came to start of buffer - that means buffer is too small,

// If we found a dataType

// If we get here with a content-box, we're seeking "padding" or "border" or "margin"

// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,

// If we have elements to modify, make the request

// If we have memory from a past run, we should fire after adding

// If we include width, step value is 1 to do all cssExpand values,

// If we need to compress text, change encoding to utf8.

// Ignore click events that had mousedown on the container but mouseup on the popup

// Ignore click events that had mousedown on the popup but mouseup on the container

// Ignore double-resolution attempts

// Ignore post-resolution exceptions

// Ignore repeat invocations

// Ignore the finally entry if control is not jumping to a

// Image

// Implement show/hide animations

// Implement the identical functionality for filter and not

// Importing jspdf in nodejs environments does not work as of jspdf

// In CSS3, :checked should return both checked and selected elements

// In Chrome, if an element having a focusout handler is blurred by

// In IE/Edge using regex groups here causes severe slowdowns.

// In JSDOM, if we're inside shadow DOM, then parentNode

// In Safari 8 documents created via document.implementation.createHTMLDocument

// In case of HTML, we need a different computation

// In cases where either:

// In cases where the parent is fixed, we must ignore negative scroll in offset calc

// In our bodyBackground.html iframe,

// In some browsers, typeof returns "function" for HTML <object> elements

// In such cases, we work around the behavior by prefixing every selector in the

// In those cases, the computed value can be trusted to be border-box.

// In-page `selector#id sibling-combinator selector` fails

// Includes all common event props including KeyEvent and MouseEvent specific props

// Incorporate borders into its offset, since they are outside its content origin

// Incorporate the offset, then check against cycle size

// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that

// Index in selector

// Index of currently firing callback (modified by add/remove as needed)

// Init the element's event structure and main handler, if this is the first

// Init the event handler queue if we're the first

// Initialize a jQuery object

// Initialize against the default document

// Initialize central reference

// Inject the element directly into the jQuery object

// Inline XML images may fail to parse, throwing an Error later on

// Inline style trumps all

// Insert callback into url or form data

// Inspect recursively

// Install callback

// Install callbacks on deferreds

// Install script dataType

// Instance methods

// Instance-specific data

// Intentionally let the error be thrown if parseHTML is not present

// Interestingly, IE 10 & older don't seem to have the issue.

// Interestingly, in some cases IE 9 doesn't suffer from this issue.

// Interrupt processing of the outer synthetic .trigger()ed event

// Invalid sequence start

// Is the DOM ready to be used? Set to true once it occurs.

// It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)

// It isn't worth it to make additional optimizations as in original.

// It's a jQuery object

// Item is non-scalar (array or object), encode its numeric index.

// Iteratively approximate from a nonzero starting point

// Iterator interface in terms of a single ._invoke method.

// JQuery element(s)

// JS ints have 32 bit, block below not needed

// JS specific, because we have no pointers

// JS specific: little magic to add zero terminator to end of string

// JSON[@@toStringTag] property

// JSPDF 1.4 uses get functions instead of properties on pageSize

// Join array of chunks to single array.

// Jump to end and forget the data so .add doesn't re-fire

// Keep an empty list if we have data for future add calls

// Keep pipe for back-compat

// Keep references to cloned scripts for later restoration

// Keep track of which events have ever been used, for event optimization

// Keys separate source (or catchall "*") and destination types with a single space

// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable

// LB10 Treat any remaining combining mark or ZWJ as AL.

// LB11 Do not break before or after Word joiner and related characters.

// LB12 Do not break after NBSP and related characters.

// LB12a Do not break before NBSP and related characters, except after spaces and hyphens.

// LB13 Do not break before ‘]’ or ‘!’ or ‘;’ or ‘/’, even after spaces.

// LB14 Do not break after ‘[’, even after spaces.

// LB15 Do not break within ‘”[’, even with intervening spaces.

// LB16 Do not break between closing punctuation and a nonstarter (lb=NS), even with intervening spaces.

// LB17 Do not break within ‘——’, even with intervening spaces.

// LB18 Break after spaces.

// LB19 Do not break before or after quotation marks, such as ‘ ” ’.

// LB20 Break before and after unresolved CB.

// LB21 Do not break before hyphen-minus, other hyphens, fixed-width spaces, small kana, and other non-starters, or after acute accents.

// LB21a Don't break after Hebrew + Hyphen.

// LB21b Don’t break between Solidus and Hebrew letters.

// LB22 Do not break between two ellipses, or between letters, numbers or exclamations and ellipsis.

// LB23 Do not break between digits and letters.

// LB23a Do not break between numeric prefixes and ideographs, or between ideographs and numeric postfixes.

// LB24 Do not break between numeric prefix/postfix and letters, or between letters and prefix/postfix.

// LB25 Do not break between the following pairs of classes relevant to numbers:

// LB26 Do not break a Korean syllable.

// LB27 Treat a Korean Syllable Block the same as ID.

// LB28 Do not break between alphabetics (“at”).

// LB29 Do not break between numeric punctuation and alphabetics (“e.g.”).

// LB30 Do not break between letters, numbers, or ordinary symbols and opening or closing parentheses.

// LB30a Break between two regional indicator symbols if and only if there are an even number of regional

// LB30b Do not break between an emoji base and an emoji modifier.

// LB6 Do not break before hard line breaks.

// LB7 Do not break before spaces or zero width space.

// LB8 Break before any character following a zero-width space, even if one or more spaces intervene.

// LB8a Do not break between a zero width joiner and an ideograph, emoji base or emoji modifier.

// LB9 Do not break a combining character sequence; treat it as if it has the line breaking class of

// Last fire value for non-forgettable lists

// Last-Modified header cache for next request

// Lazy-add the new callbacks in a way that preserves old ones

// Lead Surrogate Code Point.  A Separate index section is stored for

// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter

// Lengthen the array for every element, matched or not

// Let integer be ? ToInteger(index).

// Leverage slice if possible

// Limitations

// Listen to events

// Load entry module and return exports

// Loader

// Local document vars

// Look for any active animations, and finish them

// Look for any animations in the old queue and finish them

// Loop through all the selected options

// Loop trough the offsets arrays and execute the operations

// Loop variable

// MS Edge converts symbol values to JSON as {}

// Main method

// Make 'in' and truthy checks like Boolean(set.constructor)

// Make a writable jQuery.Event from the native event object

// Make numeric if forced or a qualifier was provided and val looks numeric

// Make sure all columns get at least min width even though width calculations are not based on them

// Make sure avail_out > 6 to avoid repeating markers

// Make sure text is always string[] since user can assign string

// Make sure textarea (and checkbox) defaultValue is properly cloned

// Make sure that null and NaN values aren't set (#7116)

// Make sure that re-using the options doesn't screw things around

// Make sure that the handler has a unique ID, used to find/remove it later

// Make sure that we're working with the right name

// Make sure that we're working with the right name. We don't

// Make sure the buffer can hold this + the largest possible addition

// Make sure the element is visible & connected

// Make sure this is recognized as a len/dist with 28th bit (2^28)

// Make sure we set the data so it isn't changed later

// Make sure we trim BOM and NBSP

// Make sure we update the tween properties later on

// Make the changes, replacing each non-ignored context element with the new content

// Make the deferred a promise

// Make this explicit, since user can override this through ajaxSetup (#11264)

// Make value of this field explicit since

// Many optimizations have been made, so the bundle size is ultimately smaller but performance is similar.

// Map over jQuery in case of overwrite

// Map over the $ in case of overwrite

// Map tuples (progress, done, fail) to arguments (done, fail, progress)

// Margin is only for outerHeight, outerWidth

// Mark it as fixed

// Mark scripts as having already been evaluated

// Match elements found at the specified indexes

// Match elements unmatched by `matcher`

// Match html or make sure no context is specified for #id

// Matches dashed string for camelizing

// Maximum chunk size (practically, theoretically infinite) is 2^17;

// Method init() accepts an alternate rootjQuery

// Methods guaranteed to produce a unique set when starting from a unique set

// Microsoft Edge fix

// Microsoft forgot to hump their vendor prefix (#9572)

// Miscellaneous

// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add

// Module

// More options handling for requests with no content

// Most of the units rely on the orientation of the popper

// Move matched elements from seed to results to keep them synchronized

// Move the given value to match[3] whether quoted or unquoted

// Much faster than just using the start

// Much of the following code is similar to that of UZIP.js:

// Multi-Selects return an array

// Multifunctional method to get and set values of a collection

// Multiple arguments are aggregated like Promise.all array elements

// Must access selectedIndex to make default options select

// Must repeat iteration if out buffer is full

// NB: No relatedTarget if the mouse left/entered the browser window

// NB: by unknown reasons, Array is significantly faster for

// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too

// NO RENDER

// NOOP

// NOTE: 1 DOM access here

// NOTE: DOM access here

// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`

// NU (NU | SY | IS)* (CL | CP)? × (PO | PR))

// NU (NU | SY | IS)* × (NU | SY | IS | CL | CP)

// NU ×	(NU | SY | IS)

// Namespaced trigger; create a regexp to match event type in handle()

// Native handler

// Need extra info to make a tree

// Need init if jQuery is called (just allow error to be thrown if not included)

// Need to be able to calculate position if either

// Never move original objects, clone them

// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"

// No argument, return index in parent

// Node.js 0.8-

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:

// Normalize "" and auto

// Normalize opt.queue - true/undefined/null -> "fx"

// Not available in IE8, Safari 5, etc.

// Not public - generate a queueHooks object, or return the current one

// Not quite $.extend, this won't overwrite existing keys.

// Not running in a browser, provide a factory function

// Not sure about the optimal order of these conditions:

// Not using getter since:

// Note that simple async functions are implemented on top of

// Note that the semicolon was intentional

// Note that this is not perfect for now since for example row and table styles are

// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,

// Note: DOMNode.style.paddingRight returns the actual value or '' if not set

// Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.

// Note: ["return"] must be used for ES3 parsing compatibility.

// Note: adler32 takes 12% for level 0 and 2% for level 6.

// Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi

// Note: this expression could be refactored for slightly improved efficiency, but

// Note: we can't get significant speed boost here.

// Nothing should be selected when empty strings follow ^= or $= or *=

// Now data ready and we can init static trees

// Nullify the div so it wouldn't be stored in the memory and

// Object.prototype.hasOwnProperty.call

// Objects with no prototype (e.g., `Object.create( null )`) are plain

// Objects with prototype are plain iff they were constructed by a global Object function

// Old Firefox doesn't throw on a badly-escaped identifier.

// Older IE sometimes signals "interactive" too soon

// Older WebKit doesn't clone checked state correctly in fragments

// On Chrome, the arguments in a function call that are allowed is `65534`.

// On a manual native abort, IE9 throws

// On success - join

// On the other hand, just using `getAttribute` is not enough as

// Once for each type.namespace in types; type may be omitted

// One-time assignments

// Only Firefox includes border widths

// Only add window if we got to document (e.g., not plain obj or detached DOM)

// Only assign if different to avoid unneeded rendering.

// Only attach events to objects that accept data

// Only certain elements can match :enabled or :disabled

// Only check objects and functions for thenability

// Only convert to a number if it doesn't change the string

// Only deal with non-null/undefined values

// Only evaluate the response if it is successful (gh-4126)

// Only keep the most recent entries

// Only normal processors (resolve) catch and reject exceptions

// Only read styles.position if the test has a chance to fail

// Only substitute handlers pass on context

// Only use addEventListener if the special events handler returns false

// Opera 10-11 does not throw on post-comma invalid pseudos

// Operate on a copy of prop so per-property easing won't be lost

// Operator (capture 2)

// Optimize for push.apply( _, NodeList )

// Option elements defer to a parent optgroup if present

// Option to run scripts is true for back-compat

// Optional AJAX dependency, but won't run scripts if not present

// Or just use first one

// Or use "dx" attribute of the <text> node as a naive replacement

// Ordinary BMP code point, excluding leading surrogates.

// Other potentially-special ASCII characters get backslash-escaped

// Otherwise append directly

// Otherwise bring back whatever was previously saved (if anything),

// Otherwise just get the value from the style object

// Otherwise nodes in our document sort first

// Otherwise use the full result

// Otherwise we know they are disconnected

// Otherwise we need full lists of their ancestors for comparison

// Otherwise, check computed style

// Otherwise, if a way to get the computed value exists, use that

// Otherwise, remove immediately

// Otherwise, throw an error or return tokens

// Override manipulation of globals by nested matchers

// Override mime type if needed

// Overrides

// Overrides response content-type header

// Padding

// Panic based approach to setting things on disconnected nodes

// Parentless nodes are either documents or disconnected

// Parse text as xml

// Pass this if window is not defined yet

// Passing an empty string as a 3rd parameter to .css will automatically

// Per-property setup

// Permission is granted to anyone to use this software for any purpose,

// Piggyback on a donor event to simulate a different one

// Plus for old WebKit, typeof returns "function" for HTML collections

// Policy creation failed (most likely another DOMPurify script has

// Policy creation with duplicate names throws in Trusted Types.

// Populate the class2type map

// Position-in-collection

// Positional selectors never match, since there's no _selection_ context

// Potentially complex pseudos

// Precompiled matchers will still verify ancestry, so step up a level

// Prefer a tbody over its parent table for containing new rows

// Prefilter to get matcher input, preserving a map for seed-results synchronization

// Prefix every selector in the list

// Prepare cache

// Prepend if requested

// Preserve <br> tags as line breaks in the pdf

// Preserve chaining for setter

// Preserve script evaluation history

// Pretend to be hidden if this is a "show" and

// Prevent Object.prototype pollution

// Prevent attribute/property "interpolation"

// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)

// Prevent further manipulation of configuration.

// Prevent memory leaks

// Prevent never-ending loop

// Prevent prototype setters from intercepting set as a this value.

// Prevent re-triggering of the same event, since we already bubbled it above

// Prevent run in Node env

// Prevent triggered image.load events from bubbling to window.load

// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)

// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters

// Private

// Process the value(s)

// Progress steps

// Promise.resolve without an argument throws an error in LG WebOS 2

// Propagate others as results

// Properties of context are called as methods if possible

// Protected

// Provide `match` to avoid retokenization if we modified the selector above

// Provide the current computed size to request scroll gutter calculation (gh-3589)

// Proxy to instance methods to constructor, for now, for backwards compatibility

// Public

// Purposefully self-exclusive

// Put explicitly provided properties onto the event object

// Put hash and anti-cache on the URL that will be requested (gh-1732)

// Put in the new values to get a computed value out

// QSA and matchesSelector support

// Queue of execution data for repeatable lists

// Queue-skipping animations hijack the fx hooks

// Queueing

// Quick check if we can use fast array to bin string conversion

// Quick check to determine if target is callable, in the spec

// Radios and checkboxes getter/setter

// Rather than returning an object with a next method, we keep

// Raw string

// Re-resolve promises immediately to dodge false rejection from

// Record all 3 overflow attributes because IE does not infer the shorthand

// Recurse if we're merging plain objects or arrays

// Reduce context if the leading compound selector is an ID

// Reenable scripts

// Refactoring modifiers' list (Object => Array)

// Regardless of whether this script is executing as a CommonJS module

// Regex strategy adopted from Diego Perini

// Register the controller as a special universal handler for all event namespaces

// Regular expressions

// Reintegrate element matches to eliminate the need for sorting

// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857

// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787

// Remaining elements are neither :enabled nor :disabled

// Remember real `avail_out` value, because we may patch out buffer content

// Remember that setFilters inherits from pseudos

// Remember that the DOM is ready

// Remember the hash so we can put it back

// Remember the old values, and insert the new ones

// Remember the original values

// Remember the top-level container

// Remember what we're overwriting

// Remove *all* instances

// Remove a callback from the list

// Remove all callbacks from the list

// Remove any remaining nodes

// Remove auto dataType and get content-type in the process

// Remove boolean attributes when set to false

// Remove data and the expando if it's no longer used

// Remove duplicates

// Remove element nodes and prevent memory leaks

// Remove extra space and line breaks in markup to make it more similar to

// Remove from its parent by default

// Remove generic event handler if we removed something and no more handlers exist

// Remove hash to simplify url manipulation

// Remove matching events

// Remove resize event listener on window

// Remove scroll event listener on scroll parents

// Remove the expando if there's no more data

// Remove wrapper from fragment

// Removing the function wrapper causes a "Permission Denied"

// Render buttons

// Replace a hexadecimal escape sequence with the encoded Unicode code point

// Replace code with more verbose

// Replace newlines with <br> in title

// Replace/restore the type attribute of script elements for safe DOM manipulation

// Request state (becomes false upon send and true upon completion)

// Required to always use max window size by default.

// Reserve max possible length (2 words per char)

// Reset state

// Resetting context._sent for legacy support of Babel's

// Resize event listener on window

// Resolve Swal promise

// Resolve the animation and report its conclusion

// Resolve when we played the last frame; otherwise, reject

// Respect cellWidth set in columnStyles even if there is no cells for this column

// Response headers

// Restore body padding

// Restore fixed content padding

// Restore matcherIn since elem is not yet a final match

// Restore sticky content

// Restore the original display value at the end of pure show/hide animations

// Restrict "overflow" and "display" styles during box animations

// Resume execution at the desired location (see delegateYield).

// Rethrow post-completion exceptions

// Retrieve `then` only once

// Retrieving style before computed somehow

// Return 0 if element or transition duration is not found

// Return a confounding non-pixel value or feign ignorance, as appropriate.

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property

// Return a vendor-prefixed property or undefined

// Return all the elements in a clean array

// Return an iterator with no values.

// Return body, `getScroll` will take care to get the correct `scrollTop` from it

// Return early from calls with invalid selector or context

// Return early if doc is invalid or already selected

// Return false to allow normal processing in the caller

// Return jQuery for attributes-only inclusion

// Return just the one element from the set

// Return non-false to allow normal event-path propagation

// Return special upon seeing a positional matcher

// Return the cloned set

// Return the exports of the module

// Return the length of the invalid excess

// Return the modified object

// Return the newly-formed element set

// Return the resulting serialization

// Return zeros for disconnected and hidden (display: none) elements (gh-2310)

// Reuse newcache so results back-propagate to previous elements

// Reusing 'index' because we have the correct "name"

// Reverse direction for :only-* (if we haven't yet done so)

// Reverse order for parents* and prev-derivatives

// Revert the changed values

// Revert the old values

// Run callback and check for early termination

// Run delegates first; they may want to stop propagation beneath us

// Run the resizer again if there's remaining width needs

// Run the timer and safely remove it when done (allowing for external removal)

// Running getBoundingClientRect on a

// Running getBoundingClientRect on a disconnected node

// SVG

// Safari 4 - 5 only, Opera <=11.6 - 12.x only

// Safari 6.0 supports :scope but it's an alias of :root there.

// Safari 8 has buggy iterators w/o `next`

// Safari sends mouseenter too often; see:

// Safari shows pseudoelements if content is set

// Same as closest-corner, except the ending shape is sized based on the farthest corner.

// Same as closest-side, except the ending shape is sized based on the farthest side(s)

// Save back as free

// Save response for use in complete callback

// Save selector and tokenization

// Save the URL in case we're toying with the If-Modified-Since

// Save the callback name for future use

// Saved data should be false in such cases, but might be a leftover capture object

// Scroll container to top on open (#1247, #1946)

// Scroll event listener on scroll parents

// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display

// See https://bugs.jquery.com/ticket/13378

// See https://connect.microsoft.com/IE/feedback/details/1736512/

// See https://github.com/facebook/regenerator/issues/274 for more details.

// See https://github.com/jquery/sizzle/pull/225

// See https://github.com/whatwg/html/issues/2369

// See https://html.spec.whatwg.org/#nonce-attributes

// See if we can take a shortcut and just use innerHTML

// See setDocument()

// See state defs from inflate.js

// See ticket #14549 for more info.

// Seedless set matches succeeding multiple successful matchers stipulate sorting

// Seek `elem` from a previously-cached index

// Seek a direct converter

// Select is set to empty string on purpose

// Send global event

// Serialize an array of form elements or a set of

// Serialize array item.

// Serialize object item.

// Serialize scalar item.

// Serialize the form elements

// Set @@toStringTag to native iterators

// Set caption text

// Set data for the fake xhr object

// Set document vars if needed

// Set headers

// Set limit ~ twice less than 5552, to keep

// Set position first, in-case top/left are set even on static elem

// Set queue step attribute for getQueueStep() method

// Set readyState

// Set the Accepts header for the server, depending on the dataType

// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.

// Set the base href for the created document

// Set the correct header, if data is being sent

// Set the data...

// Set the display of the elements in a second loop to avoid constant reflow

// Set the guid of unique handler to the same of original handler, so it can be removed

// Set triggered link as active

// Set triggered links parents as active

// Set width or height on the element

// Sets many values

// Sets multiple values

// Sets one value

// Setting context._sent for legacy support of Babel's

// Setup dictionary

// Setup limits is not necessary because in js we should not preallocate memory

// Shift arguments if data argument was omitted

// Shortcut for :nth-*(n)

// Shortcut simple #id case for speed

// Should also take into account that head and foot is not

// Should return 1, but returns 4 (following)

// Shoutout AngusCroll (https://goo.gl/pxwQGp)

// Show any hidden elements after setting opacity to 0

// Show elements before animating them

// Simple values such as "10px" are parsed to Float;

// Simulate old RGBColor version, which can't parse rgba.

// Simulated bind

// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in

// Since we force visibility upon cascade-hidden elements, an immediate (and slow)

// Single element

// Single tag

// Single- and empty arguments are adopted like Promise.resolve

// Skip elements already in the context collection (trac-4087)

// Skip hidden elements which don't have an offsetParent

// Skip over if undefined or null

// Skip snyc markers if more data follows and not raw mode

// Skip the boolean and the target

// Small size is preferable.

// So expect focus to be synchronous when the element is already active,

// So write code to minimize size - no pregenerated tables

// So, we allow :focus to pass through QSA all the time to avoid the IE error

// Some browsers don't support the "nonce" property on scripts.

// Some styles come back with percentage values, even though they shouldn't

// Some versions of FF have rAF but not cAF

// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint

// Sort on method existence if only one input has compareDocumentPosition

// Sort stability

// Special case to return head of iframe instead of iframe itself

// Special processors (notify) just wait for resolution

// Speed up dequeue by getting out quickly if this is just a lookup

// Src, alt

// StackBlur requires canvas be on document

// Start the next in the queue if the last step wasn't forced.

// Start with computed style

// Starting value computation is required for potential unit mismatches

// Static

// Status-dependent callbacks

// Stop scripts or inline event handlers from being executed immediately

// Store arguments for use when handling the inner native event

// Store className if set

// Store hidden/visible for toggle so `.stop().toggle()` "reverses"

// Strict HTML recognition (#11290: must start with <)

// Strict mode functions invoked without .call/.apply get global-object context

// String encode/decode helpers

// Stringify 0 and false, but not undefined or null

// Strip and collapse whitespace

// Strip and collapse whitespace according to HTML spec

// Style of cloned element affects source element cloned (#8908)

// Subtract margins of documentElement in case it's being used as parent

// Subtract parent offsets and element margins

// Success icon background color

// Success/Error

// Supplemental code point, use two-level lookup.

// Support array or space separated string of keys

// Support: Android 4.0 - 4.3 only

// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44

// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3

// Support: Android 4.0 only

// Support: Android 8 Chrome 86+

// Support: Android <=2.3 only

// Support: Android <=2.3 only (functionish RegExp)

// Support: Android <=4.0 only

// Support: Android <=4.0 only, PhantomJS 1 only

// Support: Android <=4.1 - 4.3 only

// Support: Android <=4.1 only

// Support: Android <=4.3 only

// Support: Android<4.0

// Support: Chrome 14-35+

// Support: Chrome 86+

// Support: Chrome <=35 - 45

// Support: Chrome <=35 - 45+

// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1

// Support: Chrome <=57, Firefox <=52

// Support: Chrome <=64

// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+

// Support: Firefox 20+

// Support: Firefox 51+

// Support: Firefox 64+, Edge 18+

// Support: Firefox 70+

// Support: Firefox <=3.6 - 5 only

// Support: Firefox <=42

// Support: Firefox <=43 - 45

// Support: Firefox <=44

// Support: Firefox <=54

// Support: IE 10 - 11+, Edge 15 - 18+

// Support: IE 11 only

// Support: IE 11+

// Support: IE 11+, Edge 15 - 18+

// Support: IE 11+, Edge 17 - 18+

// Support: IE 11, Edge

// Support: IE 6 - 7 only

// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,

// Support: IE 8 - 9 only

// Support: IE 8 only

// Support: IE 9 - 11 only

// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only

// Support: IE 9 - 11+, Edge 12 - 18+

// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only

// Support: IE 9 - 11+, Edge 15 - 18+

// Support: IE 9 only

// Support: IE <9 only

// Support: IE <=10 - 11 only

// Support: IE <=10 - 11, Edge 12 - 13 only

// Support: IE <=11 only

// Support: IE <=11 only, Firefox <=30 (#15098, #14150)

// Support: IE <=11+

// Support: IE <=8

// Support: IE <=8 - 11 only

// Support: IE <=8 - 11, Edge 12 - 15

// Support: IE <=9

// Support: IE <=9 - 10 only

// Support: IE <=9 - 11 only

// Support: IE <=9 - 11+

// Support: IE <=9 - 11, Edge 12 - 15

// Support: IE <=9 only

// Support: IE, Opera, Webkit

// Support: IE8

// Support: IE8, Opera 11-12.16

// Support: IE9-11+

// Support: IE<10

// Support: IE<8

// Support: IE<9

// Support: IE<9, Safari

// Support: Opera 10 - 11 only

// Support: Promises/A+ section 2.3.1

// Support: Promises/A+ section 2.3.3.3.1

// Support: Promises/A+ section 2.3.3.3.3

// Support: Promises/A+ section 2.3.3.3.4.1

// Support: Promises/A+ section 2.3.4

// Support: Promises/A+ sections 2.3.3.1, 3.5

// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5

// Support: Safari 6.0 only

// Support: Safari 7 only

// Support: Safari 8 only

// Support: Safari 8+

// Support: Safari 8+, iOS 8+

// Support: Safari <=6 - 7 only

// Support: Safari <=7 - 9.1, Chrome <=37 - 49

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)

// Support: Windows 8 Native Apps

// Support: Windows Web Apps (WWA)

// Support: iOS 10.0-10.2 only

// Support: real iOS 8.2 only (not reproducible in simulator)

// Suppress native focus or blur as it's already being fired

// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)

// Swappable if display is none or starts with table

// Switch to use dynamic table

// TODO (fat): remove sketch reliance on jQuery position/offset

// TODO As some browsers display the line as more than 1px if the font-size is big,

// TODO If the image has no intrinsic dimensions but has intrinsic proportions, it's rendered as if contain had been specified instead.

// TODO need some optimisations. possibly build cache only for curved segments?

// TODO try and find exact position for line-through

// TODO use correct font-size

// TODO: 2 or 1 bytes?

// TODO: Now that all calls to _data and _removeData have been replaced

// TODO: Remove from `core-js@4`

// TODO: applyToPoint unused ... remove?

// TODO: compute?

// TODO: find out how this code works (debt)

// TODO: identify versions

// TODO: implement

// TODO: may be {}

// TODO: optimize/split up?

// TODO: refactor out apply from feColorMatrix

// TODO: this is too naive, make it better

// Table can't get smaller due to custom-width or minWidth restrictions

// Table columns in Safari have non-zero offsetWidth & zero

// Table with utf8 lengths (calculated by first byte of sequence)

// Tag

// Take advantage of querySelectorAll

// Take an array of elements and push it onto the stack

// Take the "read" path and allow the get method to determine

// Target should not be a text node (#504, #13143)

// Test for IE <= 9 as proposed by Browserhacks

// Tests for existence of standard globals is to allow style-loader

// Text to html (true = no transformation)

// Thank's IE8 for his funny defineProperty

// Thanks to Andrew Dupont for this technique.

// That will never happens, if you don't cheat with options :)

// That's alias to max_lazy_match, don't use directly

// The ._invoke method unifies the implementations of the .next,

// The `node.getAttribute` check was added for the sake of

// The attrs elements can be null (#14894)

// The broken getElementById methods don't pick up programmatically-set names,

// The calling jQuery object (element matches) is not empty

// The code should never reach this place (this means

// The context.catch method must only be called with a location

// The current version of jQuery being used

// The default length of a jQuery object is 0

// The deferred used on DOM ready

// The delegate iterator is finished, so forget it and continue with

// The elements to wrap the target around

// The ending shape is sized so that that it exactly meets the side of the gradient box closest to the gradient’s center.

// The ending shape is sized so that that it passes through the corner of the gradient box closest to the gradient’s center.

// The final step of a "hide" animation is actually hiding the element

// The foundational matcher ensures that elements are reachable from top-level context(s)

// The getter ensures a default option is selected

// The identifier C does not have to be a valid language name."

// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append

// The jQuery object is actually just the init constructor 'enhanced'

// The key will always be camelCased in Data

// The matching of C against the element's language value is performed case-insensitively.

// The module cache

// The only way to switch from HTML namespace to MathML

// The only way to switch from HTML namespace to SVG

// The only way to switch from MathML to SVG is via

// The only way to switch from SVG to HTML is via

// The only way to switch from SVG to MathML is via

// The other dimension is computed using the specified dimension and the intrinsic proportions.

// The ready event handler and self cleanup method

// The require function

// The root entry object (effectively a try statement without a catch

// The technique has to be used as well when a leading combinator is used

// The test attribute must be unknown in Opera but "safe" for WinRT

// The type and name attributes are restricted during .innerHTML assignment

// The unspecified dimension is computed using the image's corresponding intrinsic dimension,

// The unspecified dimension is computed using the specified dimension and the intrinsic proportions.

// The url can be an options object (which then must have .url)

// The user may use createPseudo to indicate that

// The value/s can optionally be executed if it's a function

// There *must* be a type, no attaching namespace-only handlers

// There will always be at least one argument (an event object), so this array

// There's only work to do if current dataType is non-auto

// These hooks are used by animate to expand properties

// These usually indicate a programmer mistake during development,

// They will have gone through all possible matchers

// This "if" is needed for plain objects

// This accentuates the need for the creation of a real `window`.

// This can happen when the user drags a slider

// This check is needed to avoid errors in case one of the elements isn't defined for any reason

// This corresponds to the behavior of CSS absolute positioning

// This entry need to be wrapped in an IIFE because it need to be in strict mode.

// This environment has a native %IteratorPrototype%; use it instead

// This expression is here for better compressibility (see addClass)

// This happens for inline elements with no explicit setting (gh-3571)

// This hash causes less collisions, https://github.com/nodeca/pako/issues/135

// This is a polyfill for %IteratorPrototype% for environments that

// This is a singleton, we need to execute it only once

// This is against the CSSOM draft spec:

// This is to test IE's treatment of not explicitly

// This isn't reproducible in IE10 compatibility mode of IE11

// This logic, however, is not guaranteed and can change at any point in the future

// This method supposes what all custom fonts already loaded.

// This method will return documentElement in the following cases:

// This module should not be running in strict mode, so the above

// This should fail with an exception

// This software is provided 'as-is', without any express or implied

// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the

// This transport only deals with cross domain or forced-by-attrs requests

// This will throw an exception if access to iframe is blocked

// Timeout

// Timers currently will call their complete callbacks, which

// Title

// To avoid creating an additional object, we just hang the .value

// To know if global events are to be dispatched

// To know if the callbacks have already been called at least once

// Toggle individual class names

// Toggle whole class name

// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id

// Top level file is just a mixin of submodules & constants

// Totally disable Popper for Dropdowns in Navbar

// Trace((stderr,"\nbit length overflow\n"));

// Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));

// Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,

// Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,

// Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",

// Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,

// Track unmatched elements for set filters

// Traverse its children

// Treat each array item as a scalar.

// Treat null/undefined as ""; convert numbers to string

// Treat the template element as a regular one in browsers that

// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

// Trigger the native event and capture its result

// Trim the selector passed to compile

// Trust units reported by jQuery.css

// Try convertible dataTypes

// Try prefixed name followed by the unprefixed name

// Try to minimize operations if there is only one selector in the list and no seed

// Try to shortcut find operations (as opposed to filters) in HTML documents

// Try/catch helper to minimize deoptimizations. Returns a completion

// Turn off finishing flag

// Type selector

// Types can be a map of types/handlers

// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER

// URL without anti-cache param

// Un-match failing elements by moving them back to matcherIn

// Unbind all events (on this namespace, if provided) for the element

// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test

// Unique for each copy of jQuery on the page

// Unless errors are allowed to bubble, catch and return them

// Unless we *know* we can detect duplicates, assume their presence

// Unset WeakMaps so GC will be able to dispose them (#1569)

// Unset globalState props so GC will dispose globalState (#1569)

// Unset this.params so GC will dispose it (#1569)

// Up

// Update `data` attributes, styles and arrowStyles

// Update global variables

// Update special based on newly reset type

// Uppercase the type

// Url cleanup var

// Use '|' instead of '+' to make sure that result is signed

// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)

// Use .is( ":disabled" ) so that fieldset[disabled] works

// Use .style if available and use plain properties where available.

// Use IE sourceIndex if available on both nodes

// Use a noop converter for missing script but not if jsonp

// Use a property on the element directly when it is not a DOM element,

// Use a stripped-down indexOf as it's faster than native

// Use cssHook if its there.

// Use data converter to retrieve json after script execution

// Use default `inputValidator` for supported input types if not provided

// Use defaultValue in place of getAttribute("value")

// Use flat array of DOUBLE size, with interleaved fata,

// Use getAttributeNode to fetch booleans when getAttribute lies

// Use height if placement is left or right and index is 0 otherwise use width

// Use integer dirruns iff this is the outermost matcher

// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)

// Use native DOM manipulation to avoid our domManip AJAX trickery

// Use offsetWidth/offsetHeight for when box sizing is unreliable.

// Use onreadystatechange to replace onabort

// Use ordinary array, since untyped makes no boost here

// Use previously-cached element index if available

// Use proper attribute retrieval(#12072)

// Use same guid so caller can remove using origFn

// Use step hook for back compat.

// Use textContent for elements

// Use the fix-ed jQuery.Event rather than the (read-only) native event

// Use the handy event callback

// Use the original fragment for the last item

// Use the same loop as above to seek `elem` from the start

// Use toString instead of jQuery.type to catch host objects

// Use typeof to avoid zero-argument method invocation on host objects (#15151)

// Use untyped array for more convenient processing later

// Used by camelCase as callback to replace()

// Used for iframes

// Used only for `focus(in | out)` events

// Utilize native event if possible so blur/focus sequence is correct

// Utilize native event to ensure correct state for checkable inputs

// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables

// Verify that getAttribute really returns attributes and not properties

// Verify the id attribute

// Very small and broken sequence,

// Walk down the tree looking for a discrepancy

// Watch for a new set of requests

// We add the dataType to the list if needed

// We allow this because of a bug in IE8/9 that throws an error

// We also need to check if the mouseup target is a child of the popup

// We also use the url parameter if available

// We always set camelCase keys, so remove that.

// We always should modify head and prev, but only add symbols if

// We always store the camelCased key

// We assume that it's the callback

// We can accept data for non-element nodes in modern browsers,

// We can fire global events as of now if asked to

// We can use :scope instead of the ID hack if the browser

// We can't cloneNode fragments that contain checked, in WebKit

// We can't detect it synchronously, so just check versions

// We can't really do much here. Up to user to for example

// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

// We can't use @@species feature detection in V8 since it causes

// We can't use class properties because they don't get listed in the

// We can't use this feature detection in V8 since it causes

// We disallow tags that are specific for MathML

// We don't need an array for one selects

// We don't want to classify *any* DOM node as a function.

// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2

// We have no pointers in JS, so keep tables separate

// We have separate tables & no pointers. 2 commented lines below not needed.

// We have to close these tags to support XHTML (#13200)

// We must always have either seed elements or outermost context

// We need Promise#finally in the pure version for preventing prototype pollution

// We only check if the mouseup target is the container because usually it doesn't

// We should always get a number back from opacity

// We tried really hard, but the data doesn't exist.

// We use append for html objects to maintain js events

// We use this for POS matching in `select`

// We void attribute values for unremovable "is"" attributes

// We're done with this property

// Webkit & Blink performance suffers when deleting properties

// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084

// Webkit/Opera - :checked should return selected option elements

// Webpack imported jspdf instead of jsPDF for some reason 

// When a yielded Promise is resolved, its final value becomes

// When found, cache indexes on `parent` and break

// When the key is not a string, or both a key and value

// When user calls Swal.close()

// Where available, offsetWidth/offsetHeight approximate border box dimensions.

// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the

// Where there is no isDisabled, check manually

// Width

// Width and colspan

// Width, height

// With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

// Within the body of any async function, `await x` is transformed to

// Work on cloned node to make sure no changes are applied to html table

// Work with a copy of dataTypes in case we need to modify it for conversion

// Workaround for node-canvas

// Works with __proto__ only. Old v8 can't work with null proto objects.

// Wrap fontFamily only on nodejs and only for canvas.ctx

// Wrap in a new function to prevent

// X-Requested-With header

// XHTML parsers do not magically insert elements in the

// You may also wish to take a look at the guide I made about this program:

// You need to call this method manually to update glyphs cache.

// __webpack_public_path__

// `%ArrayIteratorPrototype%.next` method

// `%StringIteratorPrototype%.next` method

// `AggregateError` constructor

// `Array.from` method

// `Array.from` method implementation

// `Array.isArray` method

// `Array.prototype.concat` method

// `Array.prototype.entries` method

// `Array.prototype.every` method

// `Array.prototype.fill` method

// `Array.prototype.fill` method implementation

// `Array.prototype.filterOut` method

// `Array.prototype.filter` method

// `Array.prototype.findIndex` method

// `Array.prototype.find` method

// `Array.prototype.forEach` method

// `Array.prototype.forEach` method implementation

// `Array.prototype.includes` method

// `Array.prototype.indexOf` method

// `Array.prototype.keys` method

// `Array.prototype.map` method

// `Array.prototype.reduceRight` method

// `Array.prototype.reduce` method

// `Array.prototype.reverse` method

// `Array.prototype.slice` method

// `Array.prototype.some` method

// `Array.prototype.values` method

// `Array.prototype[@@iterator]` method

// `ArraySpeciesCreate` abstract operation

// `CreateArrayIterator` internal method

// `Date.now` method

// `Function.prototype.bind` method

// `Function.prototype.bind` method implementation

// `IsArray` abstract operation

// `IsRegExp` abstract operation

// `JSON.stringify` method behavior with symbols

// `Map` constructor

// `Object.create` method

// `Object.defineProperties` method

// `Object.defineProperty` method

// `Object.getOwnPropertyDescriptor` method

// `Object.getOwnPropertyDescriptors` method

// `Object.getOwnPropertyNames` method

// `Object.getOwnPropertySymbols` method

// `Object.getPrototypeOf` method

// `Object.keys` method

// `Object.prototype.propertyIsEnumerable` method implementation

// `Object.prototype.toString` method implementation

// `Object.setPrototypeOf` method

// `Promise.allSettled` method

// `Promise.all` method

// `Promise.any` method

// `Promise.prototype.catch` method

// `Promise.prototype.finally` method

// `Promise.prototype.then` method

// `Promise.race` method

// `Promise.reject` method

// `Promise.resolve` method

// `Promise.try` method

// `Reflect.apply` method

// `Reflect.deleteProperty` method

// `Reflect.getPrototypeOf` method

// `Reflect.get` method

// `RequireObjectCoercible` abstract operation

// `SpeciesConstructor` abstract operation

// `String.prototype.at` method

// `String.prototype.codePointAt` method

// `String.prototype.includes` method

// `String.prototype.startsWith` method

// `String.prototype.trim` method

// `String.prototype.{ trimLeft, trimStart }` methods

// `String.prototype.{ trimRight, trimEnd }` methods

// `String.prototype[@@iterator]` method

// `Symbol.asyncDispose` well-known symbol

// `Symbol.asyncIterator` well-known symbol

// `Symbol.dispose` well-known symbol

// `Symbol.for` method

// `Symbol.hasInstance` well-known symbol

// `Symbol.isConcatSpreadable` well-known symbol

// `Symbol.iterator` well-known symbol

// `Symbol.keyFor` method

// `Symbol.matchAll` well-known symbol

// `Symbol.match` well-known symbol

// `Symbol.observable` well-known symbol

// `Symbol.patternMatch` well-known symbol

// `Symbol.prototype[@@toPrimitive]` method

// `Symbol.prototype[@@toStringTag]` property

// `Symbol.replace` well-known symbol

// `Symbol.search` well-known symbol

// `Symbol.species` well-known symbol

// `Symbol.split` well-known symbol

// `Symbol.toPrimitive` well-known symbol

// `Symbol.toStringTag` well-known symbol

// `Symbol.unscopables` well-known symbol

// `Symbol` constructor

// `ToInteger` abstract operation

// `ToLength` abstract operation

// `ToObject` abstract operation

// `ToPrimitive` abstract operation

// `cancel` potentially being assigned

// `catch` cannot be the name of a module export, so we define our thenable methods here instead

// `contentDocument` with a `null` prototype.

// `hasOwn.call(value, "__await")` to determine if the yielded value is

// `i` is now the count of elements visited above, and adding it to `matchedCount`

// `in` check used to prevent JIT error (gh-2145)

// `jQuery.globalEval` so that it can fake a nonce-containing node

// `name` and `type` must use .setAttribute for WWA (#14901)

// `parseFloat` method

// `parseInt` method

// `value` parameter was not undefined. An empty jQuery object

// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test

// `|| data` is dead code meant only to preserve the variable through minification.

// a new empty registry is used when creating a template contents owner

// a string of all valid unicode whitespaces

// accessing node.sheet.cssRules throws a DOMException

// accidentally pass it on to the delegate.

// action, add listener, callbacks,

// add "__proto__" for Object.getPrototypeOf polyfill

// add .keys, .values, .entries, [@@iterator]

// add [@@species], 23.1.2.2, 23.2.2.2

// add a flag to not completely full polyfills

// add attributes

// add id

// add inline styles

// add missing metadata

// add padding so the content doesn't shift after removal of scrollbar

// add page to print next columns in new page

// add regexps

// add to index

// add type-in colors

// add unit if the value is numeric and is one of the following

// adler32(0, Z_NULL, 0)

// advance to the next closing parenthesis

// after i2 reaches last ind, will be stopped

// after the browser event has already occurred.

// akin to a jigsaw puzzle, we simply never set it to be sure.

// all object keys, includes non-enumerable and symbols

// all previous Promises have been resolved before calling invoke,

// allocate buffer

// already have an existing method we want to call, so there's no need

// already occurred before other listeners are invoked.

// already run). Skip creating the policy, as this will only cause errors

// also ensures that the minifier will not anonymize the function.

// also except WebOS Webkit https://github.com/zloirock/core-js/issues/898

// always start the path so we don't fill prior paths

// and .done properties off the next function object itself. This

// and CommonJS for browser emulators (#13566)

// and array tools dependencies.

// and blur to be synchronous when the element is not already active.

// and characters in the ranges 20000..2FFFD and 30000..3FFFD as ID, until the implementation can be revised

// and might be considered as more preferable results.

// and multiple values (non-spec behavior)

// and not the bottom of the html element

// and overwrite the input

// and refer to originalPlacement to know the original value

// and remove the opacity workaround

// and return the corresponding response

// and the second argument - flag - preferred type is a string

// and when you create one that shouldn't be

// and/or If-None-Match header later on

// any additional property we may add in the future

// any necessary setup in a predictable way. This predictability

// any property present in `data.attributes` will be applied to the popper,

// any property present in `data.styles` will be applied to the popper,

// apply filters

// apply mask on first byte

// are based on the document's URL (gh-2965)

// are emptied (fx is the type by default)

// are specified, set or extend (existing objects) with either:

// arg is for internal usage only

// argument that corresponds to a known catch block.

// arguments are needed to create the filter function

// arguments.

// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common

// argumentsList[@@iterator] is %ArrayProto_values%

// arising from the use of this software.

// around the issue.

// array of color definition objects

// arrow depends on keepTogether in order to work

// as such selectors are not recognized by querySelectorAll.

// as xhr.onerror cannot be accessed

// aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute

// assign valid params from `params` to `defaults`

// assignment should always work unless something is misconfigured. Just

// assuming x==0 && y==0 for now

// async functions in terms of async generators, it is especially

// attempt a parseFloat and fallback to a string if the parse fails.

// auto

// automatically dequeued

// avoid memory leak

// avoid to make this modifier completely useless and look like broken

// añadir las librerias que usamos

// añadir los css de las librerias

// añadir los css propios

// añadir los modulos del sistema

// background-* props affect original clone's values

// backwards compat in hooks

// be drawn above other things on the page

// because JS does not support effective

// because max possible codepoint is 0x10ffff

// because we have no header for autodetect.

// becomes browsing-context connected.

// before getting into regexps, try simple matches

// before popup (re)initialization, so it'll be possible to check Swal.isVisible()

// behavior of getting and setting a style property

// being emptied incorrectly in certain situations (#8070).

// being equal to the identifier C,

// bind timers to global for call from export context

// bits read

// bits read, code

// bits to remove for reverser

// bottom/right side

// break out early when we reach "nice" (we are satisfied enough)

// browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339

// bubbling surrogate propagates *after* the non-bubbling base), but that seems

// buf[] - utf8 bytes array

// but in case when params.animation is a function, we need to call that function

// but it must have a current display style that would benefit

// but leave for few code modifications

// but that will not handle a native abort

// but those exceptions were never presented as a real life use-cases

// but we should not, see #8335.

// but width seems to be reliably pixels.

// by a handler lower down the tree; reflect the correct value.

// by adding a data-tt-policy-suffix to the script element with the DOMPurify.

// by using document.implementation

// bytes remaining

// calculate data length

// call invoke immediately, without waiting on a callback to fire,

// call something on iterator step with safe closing on error

// callbacks from appending listeners

// camelCase, specialEasing and expand cssHook pass

// can be null. We just simulate parent in this case.

// can throw

// can't print more columns in same page

// can't set metadata to uncaught frozen object

// can't use .constructor in case user-supplied

// case of <optgroup>

// case of <option>

// case, which will result in a "00" `matchedCount` that differs from `i` but is also

// causes stack overflow when measuring text with gradients

// chance to clean up.

// change existing entry

// check if column can grow

// check if it's first column in the sequence then add it into result

// check is required in this first loop unless we have a nonempty display value (either

// check on default Array iterator

// check that a method works with the correct list

// check the previous match

// check whether this is a <optgroup>

// check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

// checked="checked" or checked

// chunks of compressed data

// class prototype and break stuff like Sinon stubs

// clear and render

// clear the previous timer

// clear the restore focus timeout

// clicking outside of it, it invokes the handler synchronously. If

// clip

// clockwise

// closures have awful performance

// code length to copy

// code length tree

// code lengths

// code lengths bits

// code lengths map

// collapse sibling forms: the second one becomes a child of the first one.

// complex values such as "rotate(1rad)" are returned as-is.

// compute auto placement, store placement inside the data object,

// compute center of the popper

// compute reference element offsets

// compute the popper offsets

// considered in DOM in some circumstances...

// const availablePageWidth = doc.pageSize().width - (margins.left + margins.right);

// const kern = 0;

// const margins = table.settings.margin;

// const midpoint = this.getPointOnLine(

// const width = this.getLineLength(

// constructor polyfill

// contains in native

// context (optional): If specified, the fragment will be created in this context,

// context.dispatchException(context.arg) call above.

// context.method was "next", forget context.arg since it has been

// convert

// convert array to string

// convert l, H, h, V, and v to L

// convert mask to alpha with a fake node

// convert string to array (typed, when possible)

// correct value when it hasn't been explicitly set

// count binary size

// count of uncompleted subordinates

// count of unprocessed arguments

// counter-clockwise

// create a fake namespace object

// create collection constructor

// create huffman tree from u8 "map": index -> code length for code index

// create new view port

// cross-realm fallback

// css base code, injected by the css-loader

// current iteration.

// cx', cy'

// cx, cy

// d will be nonzero only when a match was found

// data from the HTML5 data-* attribute

// dataFilter is not invoked for failure responses, so using it instead

// dataKey is not used internally no more but keep for

// dataPriv.set( el, "click", ... )

// dataPriv.set( this, "blur", ... )

// dataPriv.set( this, "focus", ... )

// dataTypeExpression is optional and defaults to "*"

// deep extended (see ajaxExtend)

// default it will print bottom

// defaults to document

// deferred.done(function() { bind to newDefer or newDefer.resolve })

// deferred.fail(function() { bind to newDefer or newDefer.reject })

// deferred.notify = function() { deferred.notifyWith(...) }

// deferred.notifyWith = list.fireWith

// deferred.progress(function() { bind to newDefer or newDefer.notify })

// deferred.reject = function() { deferred.rejectWith(...) }

// deferred.rejectWith = list.fireWith

// deferred.resolve = function() { deferred.resolveWith(...) }

// deferred.resolveWith = list.fireWith

// define __esModule on exports

// define getter function for harmony exports

// define getter functions for harmony exports

// define iterator

// delegate iterator, or by modifying context.method and context.arg,

// deoptimization and performance degradation

// deoptimization and serious performance degradation

// deprecated in v3

// descendant combinators, which is not what we want.

// dictionary = dictionary.slice(dictLength - s.w_size);

// did it), otherwise encode params recursively.

// differently when margins are applied to it. The margins are included in

// disconnected node in IE throws an error

// display for all div elements is set to "inline",

// dist

// do check in _tr_init()

// do is to check its .name property.

// do not submit

// do not use `remove` because IE11 doesn't support it

// document, so we use that as our parent document to ensure nothing

// does not affect the width of columns, setting columnStyles cellWidth enables the

// don't enable it for binary compatibility

// don't natively support it.

// don't render display=none

// don't render visibility=hidden

// don't support it.

// done running, clear

// due to cross-origin restrictions

// e.g. http://example.com:80x/

// e.g. var jQuery = require("jquery")(window);

// effects

// efficient algorithm from UZIP.js

// elem.tabIndex doesn't always return the

// element is still the parent of the children

// emd of simple type-in colors

// empty mouseover listeners to the body's immediate children;

// empty mouseover listeners we added for iOS support

// end

// enough that all such attempts are guarded in a try block.

// enqueue has not been called before, then it is important to

// ensure buffer can fit at least l elements

// ensure correct active class is set to match the controls' actual values/states

// ensure size

// ensure swiping with one touch and not pinching

// equals `i`), unless we didn't visit _any_ elements in the above loop because we have

// error code, if happens (0 = Z_OK)

// error in IE

// error message

// errors on any property access that is not readyState

// eslint rule "no-unused-expressions" is disabled for this code

// eslint-disable-line dot-notation

// eslint-disable-line prefer-rest-params

// eslint-disable-next-line @typescript-eslint/no-explicit-any

// eslint-disable-next-line @typescript-eslint/no-var-requires

// eslint-disable-next-line complexity

// eslint-disable-next-line eqeqeq

// eslint-disable-next-line func-names

// eslint-disable-next-line no-console

// eslint-disable-next-line no-negated-condition

// eslint-disable-next-line no-new-func -- fallback

// eslint-disable-next-line no-new-func -- spec requirement

// eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only

// eslint-disable-next-line no-param-reassign

// eslint-disable-next-line no-prototype-builtins -- safe

// eslint-disable-next-line no-self-assign -- dirty hack

// eslint-disable-next-line no-self-compare -- NaN check

// eslint-disable-next-line no-throw-literal -- required for testing

// eslint-disable-next-line no-unused-expressions

// eslint-disable-next-line no-unused-vars -- required for `.length`

// eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing

// eslint-disable-next-line prefer-destructuring

// eslint-disable-next-line prefer-rest-params

// eslint-disable-next-line unicorn/error-message -- expected

// eslint-disable-next-line unicorn/prefer-includes

// eslint-disable-next-line unicorn/prefer-node-append

// events to fire) we explicitly restart cycling

// every

// every 16 bit value starting with the code yields the same result

// except "table", "table-cell", or "table-caption"

// exception, let the outer generator proceed normally. If

// excess is a negative index

// execute code before the first await. Since we implement simple

// executor callback, and why async functions synchronously

// export additional methods

// export native or implementation

// export real prototype methods

// export virtual prototype methods

// export { applyPlugin } didn't export applyPlugin

// expose the module cache

// expose the modules object (__webpack_modules__)

// extends keepTogether behavior making sure the popper and its

// extra field is limited to 65536 bytes

// faking a content-box to get border and padding (gh-3699)

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// fallback for not array-like ES3 strings and DOM objects

// falling back to the empty string if nothing was stored.

// fast case

// fill

// fill letter-spacing cache

// filter

// filterOut

// final column width

// find

// find all button toggles

// find all checkboxes/readio buttons inside data-toggle groups

// findIndex

// fire the first update to position the popper in the right place

// first resize attempt: with respect to minReadableWidth and minWidth

// fix Array#{values, @@iterator}.name in V8 / FF

// fix for Safari 12.0 bug

// fix native

// fixed distance map

// fixed distance tree

// fixed length map

// fixed length tree

// fixes an issue with getting wrong values

// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods

// focus() and blur() are asynchronous

// focus() and blur() are asynchronous, except when they are no-op.

// focus(in | out) events fire after focus & blur events,

// focus/blur morphs to focusin/out; ensure we're not firing them right now

// font

// for all the other DOM elements, this one is good

// for deflate. So, if window size not set, force it to max when gzip possible

// for gzip header write only

// for inflate use constant limit in 65536 bytes

// for queues, do not do this more than once

// for the description of the bug (it existed in older Chrome versions as well).

// for transform, etc.

// forces the browser to respect setting selected

// fragment in IE 9

// free bits

// freely, subject to the following restrictions:

// freq must be greater than largest possible number of symbols

// from DOM nodes, so set to undefined instead

// from an async native handler (gh-4350)

// from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html

// from identically-valued overflowX and overflowY and Edge just mirrors

// frozen object case

// fulfilled_callbacks.disable

// fulfilled_handlers.add( ... )

// fulfilled_handlers.disable

// fulfilled_handlers.fire

// function.sent implementation.

// functions to handle all closings/dismissals

// get columns can be fit into page

// get next entry

// get page width

// get reference and popper elements (allow jQuery wrappers)

// getBoundingClientRect takes transforms into account

// getBoundingClientRect().width unless display is changed.

// getComputedStyle returns percent when specified for top/left/bottom/right;

// getDefaultExport function for compatibility with non-harmony modules

// getElementById can match elements by name instead of ID

// getElementById is not reliable as a find shortcut

// getPropertyValue is needed for:

// gets around this issue.

// getting tag from ES6+ `Object.prototype.toString`

// go back from last position, until start of sequence found

// go one step up and use the next offsetParent as reference to

// go to end of byte boundary

// goto emulation

// gradient

// handle <use />

// handleObj is passed to all event handlers

// has a stable shape and so hopefully should be cheap to allocate.

// hasOwn isn't used here due to false negatives

// hash value

// have any other direct children aside of the popup

// have been (and was previously) designed to take a closure to be

// have to estimate size

// help

// here, we listen for touchend, explicitly pause the carousel

// http://stackoverflow.com/a/2345915

// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked

// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters

// http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement

// http://www.w3.org/TR/css3-background/#special-backgrounds

// http://www.w3.org/TR/css3-selectors/#whitespace

// http://www.w3.org/TR/selectors/#empty-pseudo

// http://www.w3.org/TR/selectors/#lang-pseudo

// http://www.w3.org/TR/selectors/#pseudo-classes

// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)

// https://bugs.chromium.org/p/chromium/issues/detail?id=470258

// https://bugs.chromium.org/p/chromium/issues/detail?id=830565

// https://bugs.chromium.org/p/v8/issues/detail?id=3443

// https://bugs.jquery.com/ticket/12359

// https://bugs.jquery.com/ticket/13393

// https://bugs.jquery.com/ticket/4833

// https://bugs.webkit.org/show_bug.cgi?id=136851

// https://bugs.webkit.org/show_bug.cgi?id=137337

// https://bugs.webkit.org/show_bug.cgi?id=188794

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign

// https://drafts.csswg.org/cssom/#common-serializing-idioms

// https://drafts.csswg.org/cssom/#resolved-values

// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad

// https://github.com/mathiasbynens/String.prototype.at

// https://github.com/photopea/UZIP.js

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/596

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/632

// https://github.com/simonbengtsson/jsPDF-AutoTable/issues/653

// https://github.com/tc39/proposal-Symbol-description

// https://github.com/tc39/proposal-array-filtering

// https://github.com/tc39/proposal-observable

// https://github.com/tc39/proposal-pattern-matching

// https://github.com/tc39/proposal-promise-try

// https://github.com/tc39/proposal-using-statement

// https://github.com/twbs/bootstrap/issues/24251

// https://github.com/zloirock/core-js/issues/475

// https://github.com/zloirock/core-js/issues/640

// https://github.com/zloirock/core-js/issues/677

// https://github.com/zloirock/core-js/issues/679

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028

// https://html.spec.whatwg.org/#strip-and-collapse-whitespace

// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled

// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled

// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2

// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace

// https://jsperf.com/thor-indexof-vs-for/5

// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume

// https://promisesaplus.com/#point-48

// https://promisesaplus.com/#point-54

// https://promisesaplus.com/#point-57

// https://promisesaplus.com/#point-59

// https://promisesaplus.com/#point-61

// https://promisesaplus.com/#point-64

// https://promisesaplus.com/#point-75

// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next

// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next

// https://tc39.es/ecma262/#sec-aggregate-error-constructor

// https://tc39.es/ecma262/#sec-array.from

// https://tc39.es/ecma262/#sec-array.isarray

// https://tc39.es/ecma262/#sec-array.prototype-@@iterator

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

// https://tc39.es/ecma262/#sec-array.prototype.concat

// https://tc39.es/ecma262/#sec-array.prototype.entries

// https://tc39.es/ecma262/#sec-array.prototype.every

// https://tc39.es/ecma262/#sec-array.prototype.fill

// https://tc39.es/ecma262/#sec-array.prototype.filter

// https://tc39.es/ecma262/#sec-array.prototype.find

// https://tc39.es/ecma262/#sec-array.prototype.findIndex

// https://tc39.es/ecma262/#sec-array.prototype.foreach

// https://tc39.es/ecma262/#sec-array.prototype.includes

// https://tc39.es/ecma262/#sec-array.prototype.indexof

// https://tc39.es/ecma262/#sec-array.prototype.keys

// https://tc39.es/ecma262/#sec-array.prototype.map

// https://tc39.es/ecma262/#sec-array.prototype.reduce

// https://tc39.es/ecma262/#sec-array.prototype.reduceright

// https://tc39.es/ecma262/#sec-array.prototype.reverse

// https://tc39.es/ecma262/#sec-array.prototype.slice

// https://tc39.es/ecma262/#sec-array.prototype.some

// https://tc39.es/ecma262/#sec-array.prototype.values

// https://tc39.es/ecma262/#sec-arrayspeciescreate

// https://tc39.es/ecma262/#sec-createarrayiterator

// https://tc39.es/ecma262/#sec-createmappedargumentsobject

// https://tc39.es/ecma262/#sec-createunmappedargumentsobject

// https://tc39.es/ecma262/#sec-date.now

// https://tc39.es/ecma262/#sec-function.prototype.bind

// https://tc39.es/ecma262/#sec-isarray

// https://tc39.es/ecma262/#sec-isregexp

// https://tc39.es/ecma262/#sec-json-@@tostringtag

// https://tc39.es/ecma262/#sec-json.stringify

// https://tc39.es/ecma262/#sec-map-objects

// https://tc39.es/ecma262/#sec-object.create

// https://tc39.es/ecma262/#sec-object.defineproperties

// https://tc39.es/ecma262/#sec-object.defineproperty

// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors

// https://tc39.es/ecma262/#sec-object.getownpropertynames

// https://tc39.es/ecma262/#sec-object.getownpropertysymbols

// https://tc39.es/ecma262/#sec-object.getprototypeof

// https://tc39.es/ecma262/#sec-object.keys

// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

// https://tc39.es/ecma262/#sec-object.prototype.tostring

// https://tc39.es/ecma262/#sec-object.setprototypeof

// https://tc39.es/ecma262/#sec-parsefloat-string

// https://tc39.es/ecma262/#sec-parseint-string-radix

// https://tc39.es/ecma262/#sec-promise.all

// https://tc39.es/ecma262/#sec-promise.allsettled

// https://tc39.es/ecma262/#sec-promise.any

// https://tc39.es/ecma262/#sec-promise.prototype.catch

// https://tc39.es/ecma262/#sec-promise.prototype.finally

// https://tc39.es/ecma262/#sec-promise.prototype.then

// https://tc39.es/ecma262/#sec-promise.race

// https://tc39.es/ecma262/#sec-promise.reject

// https://tc39.es/ecma262/#sec-promise.resolve

// https://tc39.es/ecma262/#sec-reflect.apply

// https://tc39.es/ecma262/#sec-reflect.deleteproperty

// https://tc39.es/ecma262/#sec-reflect.get

// https://tc39.es/ecma262/#sec-reflect.getprototypeof

// https://tc39.es/ecma262/#sec-requireobjectcoercible

// https://tc39.es/ecma262/#sec-speciesconstructor

// https://tc39.es/ecma262/#sec-string.prototype-@@iterator

// https://tc39.es/ecma262/#sec-string.prototype.codepointat

// https://tc39.es/ecma262/#sec-string.prototype.includes

// https://tc39.es/ecma262/#sec-string.prototype.startswith

// https://tc39.es/ecma262/#sec-string.prototype.trim

// https://tc39.es/ecma262/#sec-string.prototype.trimend

// https://tc39.es/ecma262/#sec-string.prototype.trimstart

// https://tc39.es/ecma262/#sec-symbol-constructor

// https://tc39.es/ecma262/#sec-symbol.asynciterator

// https://tc39.es/ecma262/#sec-symbol.for

// https://tc39.es/ecma262/#sec-symbol.hasinstance

// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable

// https://tc39.es/ecma262/#sec-symbol.iterator

// https://tc39.es/ecma262/#sec-symbol.keyfor

// https://tc39.es/ecma262/#sec-symbol.match

// https://tc39.es/ecma262/#sec-symbol.matchall

// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive

// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag

// https://tc39.es/ecma262/#sec-symbol.replace

// https://tc39.es/ecma262/#sec-symbol.search

// https://tc39.es/ecma262/#sec-symbol.species

// https://tc39.es/ecma262/#sec-symbol.split

// https://tc39.es/ecma262/#sec-symbol.toprimitive

// https://tc39.es/ecma262/#sec-symbol.tostringtag

// https://tc39.es/ecma262/#sec-symbol.unscopables

// https://tc39.es/ecma262/#sec-tointeger

// https://tc39.es/ecma262/#sec-tolength

// https://tc39.es/ecma262/#sec-toobject

// https://tc39.es/ecma262/#sec-toprimitive

// https://tools.ietf.org/html/rfc1951

// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/

// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html

// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click

// https://www.w3.org/TR/css-position-3/#painting-order

// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram

// https://www.w3.org/TR/html401/interact/forms.html#h-17.6

// i0 is lookbehind, i2 is lookahead - after processing two low-freq

// if TT are enforced.

// if `inner` modifier is enabled, we can't use the `flip` modifier

// if a Content Security Policy forbids using Function, but in that case

// if an hypothetical scrollbar is detected, we must be sure it's not a `border`

// if arrowElement is a string, suppose it's a CSS selector

// if arrowElement is defined and arrowStyles has some properties

// if arrowElement is not found, don't run the modifier

// if is an explicit pixel unit, we get rid of the unit and keep the value

// if is an implicit unit, it's px, and we return just the value

// if it is an array, then it is an <optgroup>

// if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input

// if no content

// if not specified.

// if popper is destroyed, don't perform any further update

// if shift shiftvariation is specified, run the modifier

// if symbol or svg, inherit width/height from me

// if the arrowElement isn't a query selector we must check that the

// if the body has overflow

// if the given icon already rendered, apply the styling without re-rendering the icon

// if the last angle isn't filled in because we didn't have this point yet ...

// if the target is not iterable or it's an array with the default iterator - use a simple case

// if there is one. If there is no such intrinsic dimension,

// if this node has children, then they own the text

// if we're just parsing

// if we're past the begin time

// if we're past the end time

// ignore 0 lengths

// import a list of modules into the list

// important to get this right, even though it requires care.

// in IE throws an error.

// in case runtime.js accidentally runs in strict mode, we can escape

// in computed dimensions. (gh-4529)

// in every case, so we don't have to touch the arguments object. The

// in leverageNative.

// in other case %= will fail.

// in that case, element will be second argument

// in the document.

// in this way the first offset will use an axis and the second one

// in this way we can make the 3rd party modifiers add custom styles to it

// including commercial applications, and to alter it and redistribute it

// independent of any properties defined on Object.prototype.

// index

// index mod 32768

// indicators preceding the position of the break.

// inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

// init state

// initial column width (will be resized)

// initial values and defaults

// injected easily by `bin/regenerator --include-runtime script.js`.

// inline or about-to-be-restored)

// innerText for ie

// innerText usage removed for consistency of new lines (jQuery #11153)

// input autofocus

// inside the params.animation function

// instead of the ES6 spec version, we didn't implement @@toPrimitive case

// instead of the first because it can end up

// into the async generator function so it can be handled there.

// invocations of the iterator.

// invoked without arguments, but in all the cases we care about we

// ios won't scroll without it

// is NOT fired) and after a timeout (to allow for mouse compatibility

// is based solely on the element's language value

// is better for memory in most engines (I *think*).

// is inherited.

// is present, execute the factory and get jQuery.

// is via <math>. If it happens via any other tag, then

// is via <svg>. If it happens via any other tag, then

// is via MathML text integration points

// is why the Promise constructor synchronously invokes its

// isHiddenWithinTree might be called from jQuery#filter function;

// issues/900

// istanbul ignore if

// istanbul ignore next

// it becomes the corresponding dimension of the background positioning area.

// it can be rejected by the transport if it is invalid

// it should be killed.

// it will also be a sign that checks already performed

// it'll crash Edge, #1298

// it's rendered at the size of the background positioning area.

// it, so set the completion value of the entire function to

// iterable DOM collections

// iterator prototype chain incorrectly implement this, causing the Generator

// jQuery handler

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding

// jQuery.proxy is deprecated to promote standards (specifically Function#bind)

// jQuery.support is not used in Core but other projects attach their

// join chunks

// join the rest

// just as Sizzle does

// keepScripts (optional): If true, will include scripts passed in the html string

// key/values into a query string

// lang value must be a valid identifier

// lead surrogate code units and code points.

// leading to errors. We need to check for `getRootNode`.

// leaving `result` undefined. We need to guard against this.

// length of cd must be 288 (total # of codes)

// length of literals and search for that instead.

// length+distance tree

// less bad than duplication.

// lgtm [js/useless-assignment-to-local]

// lines of this modifier!

// list with an ID selector referencing the scope context.

// location outside the try/catch block.

// locations where there is no enclosing try statement.

// loop for indefinitely repeating animations

// m is end value

// made custom fonts not work. For example:

// make update() debounced, so that it only runs at most once-per-tick

// makes the latter nonnegative.

// managed flow for split columns

// map

// map of value to reverse (assuming 16 bits)

// mask

// matchesSelector(:active) reports false when true (IE9/Opera 11.5)

// max   - length limit (mandatory);

// max bits in tree

// max dist bits

// max length bits

// mb (max bits) must be at most 15

// meant to be awaited.

// mess with these values

// method always terminates the yield* loop.

// minifier not to mangle the names of these two functions.

// mode & 16: return value when it's Promise-like

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// modern engines have queueMicrotask method

// modifiers have the ability to execute arbitrary code when Popper.js get inited

// modifiers will be able to edit `placement` if needed

// more algorithms from UZIP.js

// move tail & realign counters

// move up to me to cache

// namespace. We need to specify them explicitly

// native event and prevent that from happening again here.

// need to emulate goto via "continue"

// need to increase size to fit

// need to take that into account both in position and size

// need update from animations?

// need update from redraw?

// new document created via createHTMLDocument. As per the spec

// next index

// no ancestors on style call

// no element matchers and no seed.

// no extra bits needed if less

// no module.loaded needed

// no need to write 00 as type: TypedArray defaults to 0

// no offsetParent is present, I hate this job...

// no visible focusable elements, focus the popup

// nodeType < 6 works because attributes (2) do not appear as children

// nodeType defaults to 9, since context defaults to document

// non-composite) symbols instead

// non-xml :nth-child(...) stores cache data on `parent`

// normal flow

// normalized at this point

// not a text node?

// not accounted for

// not configurable for now

// not necessary to add metadata

// now, find the rarest 2-byte sequence within this

// nth-* requires argument

// num encoding both symbol and bits read

// numbers here are at max 18 bits

// numeric x and y parameters for Expr.filter.CHILD

// numerically zero.

// object ID

// object not strictly equal to itself.

// object to not be returned from this call. This ensures that doesn't happen.

// objects. For full spec compliance, you may wish to configure your

// of the default converter is kludgy but it works.

// of the polyfill.

// of whitespaces and has a correct name

// offset() relates an element's border box to the document origin

// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border

// old engines have not location.origin

// on a disconnected node (IE 9)

// on detached elements

// on every page with some settings

// on the option

// one of the nodes is inside shadowDOM, find which one

// only additional allocation required is the completion record, which

// only needed because of broken event delegation on iOS

// opacity

// optimisation for array iterators

// option.text throws exceptions (#14686, #14858)

// optional / simple context binding

// options in Safari work properly

// or :nth-last-child(...) or :nth(-last)?-of-type(...)

// or SVG and should never appear in HTML namespace

// or a finally block) gives us a place to store values thrown from

// or beginning with the identifier C immediately followed by "-".

// or finish the iteration

// or if the column only have colspan cells. Since the width of colspan cells

// or not, return the runtime object so that we can declare the variable

// or strings [capture 3 or capture 4]"

// or the carousel or its parent isn't visible

// or when there is no matching style property that exists.

// otherwise step value is 2 to skip over Left and Right

// otherwise we skip this part

// otherwise we will take a slower path.

// othwerise, we use the standard `top`, `left`, `bottom` and `right` properties

// outer generator.

// params.animation will be actually used in renderPopup.js

// parseFloat NaNs numeric-cast false positives ("")

// part of the mouse compatibility events on first tap - the carousel

// patch native Promise.prototype for native async functions

// pattern

// place cursor at end of text in text input

// placeholder for future implementation

// poor man optimization - use if-else instead of switch,

// position() relates an element's margin box to its offset parent's padding box

// position:fixed elements are offset from the viewport, which itself always has zero offset

// precedence is described in #2131

// prevent arrowElement from being placed not contiguously to its popper

// preventDefault only for <a> elements (which change the URL) not inside the collapsible element

// print body for selected columns

// print foot for selected columns

// print head for selected columns

// prints normal cell border

// private

// problems, please detail your unique predicament in a GitHub issue.

// progress_callbacks.lock

// progress_handlers.add( ... )

// progress_handlers.fire

// progress_handlers.lock

// promise.done = list.add

// promise.fail = list.add

// promise.progress = list.add

// properties to it so it needs to exist.

// provided DOM node is child of its popper node

// pseudo-class names are case-insensitive

// push.apply(_, arraylike) throws on ancient WebKit

// qSA considers elements outside a scoping root when evaluating child or

// qSa(:focus) reports false when true (Chrome 21)

// quick process ascii

// rather than make the css module depend on the offset module, just check for it here

// reassign mask

// record like context.tryEntries[i].completion. This interface could

// reduce font size, increase page size or remove custom cell widths

// reference have enough pixels in conjunction

// reflect point

// regarding Nodelist length in IE

// regeneratorRuntime in the outer scope, which allows this module to be

// rejected_callbacks.disable

// rejected_handlers.add( ... )

// rejected_handlers.disable

// rejected_handlers.fire

// release memory in IE

// remember that false/true cast respectively to 0/1

// remove # if any

// remove the popper if user explicitly asked for the deletion on destroy

// render 3x3 grid so when we transform there's no white space on edges

// render as temp svg

// render as temporary group

// render as text element

// render as transformed pattern on temporary canvas

// render me using a temporary svg element

// render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)

// render on me

// reset path length

// resets the popper's position so that the document size can be calculated excluding

// respecting firingIndex overrides and runtime changes

// restores the original style properties after the offsets have been computed

// result, either by returning a { value, done } result from the

// results is for internal usage only

// retrieved value as a content box dimension.

// return a primitive with prefix

// return max too.

// return max, because we should return something anyway.

// return step by kind

// return the list of modules as css string

// reverse table algorithm from SO

// revert to the last existing entry

// rollover to first item

// run the modifiers

// s->gzhead == Z_NULL

// s2 in 31-bits, because we force signed ints.

// safari doesn't parse string tokens correctly because of lack of quotes

// same way that tag soup parsers do. So we cannot shorten

// scale

// scrolling is 'hidden' until animation is done, after that 'auto'

// search for visible elements and select the next possible match

// search through the definitions to find a match

// second resize attempt: ignore minReadableWidth but respect minWidth

// see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/

// seems like flip is trying to loop, probably there's not enough space on any of the flippable sides

// separate value from unit

// set attributes

// set canvas size

// set class

// set custom class

// set in CSS while `offset*` properties report correct values.

// set initial value

// setting a boolean content attribute,

// setting context.delegate to null, and returning the ContinueSentinel.

// setting or getting the value

// setup event listeners, they will take care of update the position in specific situations

// show if `static_tree` has data or dummy - needed for monomorphic objects

// showLoaderOnConfirm && preConfirm

// since it considers such accessions noop

// since it's otherwise lost when execution goes async

// since its presence should be enough

// since they are user-defined.

// skip 5 & 6 byte codes

// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js

// so $("p:first").is("p:last") won't return true for a doc with two "p".

// so any parsed elements with URLs

// so migrate can support jQuery.sub (gh-2101)

// so that event delegation works in jQuery.

// so that results are always delivered in the correct order. If

// so that the async generator function has the opportunity to do

// so that they don't get erronously deleted from

// so that you can pass your own Window

// so they're executed at the same time to save the second computation.

// so use a roundabout getElementsByName test

// some

// some getters

// some versions of this test; make sure not to make it pass there!

// source length

// spaces as combinators

// specially universal or its namespaces are a superset of the event's.

// state = "rejected"

// state = "resolved" (i.e., fulfilled)

// state.distcode = state.next;

// state.lencode = state.next;

// state.next_index = opts.table_index;

// statics

// store both dist and len data in one Uint32

// store the computed placement inside `originalPlacement`

// strange IE + webpack dev server bug - use .call(global)

// strict mode using a global Function call. This could conceivably fail

// strings and numbers (primitives or objects)

// strip any leading #

// stroke

// struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

// struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */

// struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */

// style.borderWidth only works in chrome (borderTopWidth etc works in firefox and ie as well)

// subordinate callback factory

// subordinate fulfillment data

// subsequent errors

// subtract scrollbar size from sizes

// subtraction forces infinities to NaN

// such code is executed in the same order of its modifier

// supports it & if we're not changing the context.

// surrogate pair

// svg if parent is either <annotation-xml> or MathML

// sweetalert2/issues/1247

// swipe left

// swipe right

// symbols that combined have high freq, will start processing i2 (high-freq,

// synthetic events by interrupting progress until reinvoked in response to

// tags it will allow on a page

// take popper margin in account because we don't have this info available

// taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013

// target

// temporary variable for NEED_BITS

// terminated by end of string?

// text integration points.

// that can be coerced to finite numbers (gh-2662)

// that handler calls `.remove()` on the element, the data is cleared,

// that pass the validator function

// that takes "flat" options (not to be deep extended)

// that the element somehow got namespace that is not

// that will not break sequence. If that's not possible

// the .value of the Promise<{value,done}> result for the

// the `nonce` attribute is reset to an empty string whenever it

// the base character in all of the following rules. Treat ZWJ as if it were CM.

// the box of the documentElement, in the other cases not.

// the final result produced by the iterator.

// the first `update` will call `onCreate` callback

// the following methods are used to handle overflowing modals

// the method takes exactly one argument, since that happens to be true

// the nodejs jspdf dist files with the exported applyPlugin

// the other ones will call `onUpdate` callback

// the outer generator.

// the overflowX value there.

// the primary Deferred

// the proper solution is to fix the accidental strict mode problem. If

// the ready event fires. See #6781

// the select element.

// the size of the popper element itself

// the workaround with setting/unsetting opacity is needed for #2019 and 2059

// them by ofset X and Y.

// then let that catch block handle the exception normally.

// then remove the whole classname (if there was one, the above saved it).

// there is still data from a stopped show/hide

// they could add new properties to their options configuration

// they will be set as HTML attributes of the element

// things simple and return the next function itself.

// this boolean to detect any flip loop

// this by omitting <tbody> or other required elements.

// this data is not yet processed ("wait" for wait index)

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper

// this is the easiest way to avoid needing to maintain state

// this just defines when we can count on it).

// this object contains `position`, we want to preserve it along with

// this throws a TypeError, but we will just return undefined.

// this.comm_max   = 0;

// this.extra_max  = 0;

// this.name_max   = 0;

// throw an exception if an attempt to read a data cache is made.

// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode

// throw the exception.

// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346

// thx d.walsh

// timeout handle

// timer can be already stopped or unset at this point

// to align utf8 strings boundaries.

// to allow more columns to be reduced in size

// to allow the menu to "escape" the scroll parent's boundaries

// to avoid deopts in old v8

// to avoid forcing a reflow.

// to avoid treating leading and trailing

// to be distributed and there're columns that can be resized

// to create a new function object. We can even get away with assuming

// to handle uncaught aborts

// to index.d.ts for some reason

// to missing dependency), remove it.

// to operate correctly into non-standard environments

// to take into account the actual line breaking properties for these characters.

// to the current frame's queue

// to the native rAF function

// toObject with fallback for non-array-like ES3 strings

// todo (fat): these should probably be refactored out of modal.js

// top or left is auto and position is either absolute or fixed

// top/left side

// touch DOM only if `applyStyle` modifier is enabled

// transform

// translate

// transposeX: midpoint.x,

// transposeY: midpoint.y,

// tslint:disable-next-line: no-console

// tslint:disable-next-line: no-this-assignment

// tween

// tween color linearly

// tween value linearly

// two documents; shallow comparisons work.

// type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman

// u16 "map": index -> minimum code for bit length = index

// u16 "map": index -> number of actual bits, symbol for code

// uncached part of the url

// unguarded in another place, it seems safer to define global only for this module

// unified ._invoke helper method.

// use `filter` to obtain the same behavior of `find`

// use `find` + `indexOf` if `findIndex` isn't supported

// use index map to get real code

// use native find if supported

// use native findIndex if supported

// use plain assignment

// used to avoid multiple onEnd() calls

// user can override it through ajaxSetup method

// user to at least do it manually.

// validate/cleanup values

// variable length - can't use forEach

// variable specified by delegate.resultName (see delegateYield).

// vertical line

// via an object.

// w/o altered newTarget, lot of arguments case

// w/o altered newTarget, optimization for 0-4 arguments

// want to modify the value if it is a CSS custom property

// want to query the value if it is a CSS custom property

// warn about them ASAP rather than swallowing them by default.

// warranty. In no event will the authors be held liable for any damages

// we can ignore the fact that the other numbers are wrong; they never happen anyway

// we do this before each modifier to make sure the previous one doesn't

// we do this only on HTML because it's the only element that behaves

// we make this check conditional for performance reasons

// webpackBootstrap

// what would be shown in html

// when a statically positioned element is identified

// when an event is called after a page has unloaded

// when in an optgroup

// when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)

// when we don't find a shadow root

// whenever `document.activeElement` is accessed on an iframe

// which causes a problem only in Android 8 Chrome 86.

// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order

// which value to return, respectively either:

// while it seemed to work everywhere else.

// width difference that needs to be distributed

// will dequeue but only if they were gotoEnd.

// will not be confused with a leftover capture object.

// will result in `undefined` for elem = this[ 0 ] which will

// will use the other one

// window index

// with adding support of @@isConcatSpreadable and @@species

// with adding support of @@species

// with altered newTarget, not support built-in constructors

// with both ajaxSettings and settings fields.

// with direct calls to dataPriv methods, these can be deprecated.

// with {} we create a new object with the options inside it

// without the position applied we can't guarantee correct computations

// work around Firefox bug #1540995

// would stop cycling until user tapped out of it;

// wrap fetch result

// wrap native Promise#then for native async functions

// write final block

// write full block

// xml :nth-child(...)

// y-middle

// you can add your own custom options here if

// you've misconfigured your bundler to force strict mode and applied a

// zmemcpy(buf, strm->next_in, len);

// Δθ

//# sourceMappingURL=SVGPathData.module.js.map

//# sourceMappingURL=bootstrap.js.map

//# sourceMappingURL=data:application/json;charset=utf-8;base64,

//# sourceMappingURL=html2canvas.js.map

//# sourceMappingURL=jspdf.es.min.js.map

//# sourceMappingURL=performance-now.js.map

//# sourceMappingURL=popper.js.map

//# sourceMappingURL=purify.js.map

//#endif

//#if MIN_MATCH != 3

//#ifdef GZIP

//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR

//#ifdef INFLATE_STRICT

//#ifndef PKZIP_BUG_WORKAROUND

//&& $("#txtFecha").val().isValid()

//---

//--- BYTEBITS() ---//

//--- BYTEBITS() ---// /* go to byte boundary */

//--- DROPBITS(1) ---//

//--- DROPBITS(2) ---//

//--- DROPBITS(3) ---//

//--- DROPBITS(4) ---//

//--- DROPBITS(5) ---//

//--- DROPBITS(7) ---//

//--- DROPBITS(here.bits) ---//

//--- DROPBITS(last.bits) ---//

//--- DROPBITS(state.extra) ---//

//--- LOAD() ---

//--- PULLBYTE() ---//

//--- RESTORE() ---

//--- zmemcpy(put, next, copy); ---

//------------------------------------------------------------------------

//---//

//=== CRC2(state.check, hold);

//=== CRC4(state.check, hold)

//=== INITBITS();

//=== NEEDBITS(14); */

//=== NEEDBITS(16);

//=== NEEDBITS(16); */

//=== NEEDBITS(3);

//=== NEEDBITS(3); */

//=== NEEDBITS(32);

//=== NEEDBITS(32); */

//=== NEEDBITS(here.bits + 2);

//=== NEEDBITS(here.bits + 3);

//=== NEEDBITS(here.bits + 7);

//=== NEEDBITS(state.extra);

//===//

//Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,

//Assert (code < D_CODES, "bad d_code");

//Assert (dist == 256, "tr_static_init: 256+dist != 512");

//Assert (dist == 256, "tr_static_init: dist != 256");

//Assert (flush != Z_NO_FLUSH, "no flush?");

//Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,

//Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");

//Assert (length == 256, "tr_static_init: length != 256");

//Assert((ush)dist < (ush)MAX_DIST(s) &&

//Assert(count >= 3 && count <= 6, " 3_6?");

//Assert(more >= 2, "more < 2");

//Assert(s->block_start >= 0L, "block gone");

//Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

//Assert(s->strstart < s->w_size+MAX_DIST(s) ||

//Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");

//Assert(strm->avail_out > 0, "bug2");

//BITS(2);

//BITS(3);

//BITS(7);

//In raw mode we need to set the dictionary early

//PACKAGE=require('../../package.json');

//Tracev((stderr, "\nbl code %2d ", bl_order[rank]));

//Tracev((stderr, "\nbl counts: "));

//Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

//Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));

//Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",

//Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

//Tracev((stderr, "inflate:       code lengths ok\n"));

//Tracev((stderr, "inflate:       stored end\n"));

//Tracev((stderr, "inflate:       stored length %u\n",

//Tracev((stderr, "inflate:       table sizes ok\n"));

//Tracev((stderr, "inflate:     dynamic codes block%s\n",

//Tracev((stderr, "inflate:     fixed codes block%s\n",

//Tracev((stderr, "inflate:     stored block%s\n",

//Tracev((stderr, "inflate:   zlib header ok\n"));

//Tracev((stderr, "inflate: allocated\n"));

//Tracev((stderr, "inflate: reset\n"));

//Tracev((stderr, 'inflate:       codes ok\n'));

//Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

//Tracevv((stderr, "inflate:         distance %u\n", dist));

//Tracevv((stderr, "inflate:         distance %u\n", state.offset));

//Tracevv((stderr, "inflate:         end of block\n"));

//Tracevv((stderr, "inflate:         length %u\n", len));

//Tracevv((stderr, "inflate:         length %u\n", state.length));

//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?

//Tracevv((stderr,"%c", s->window[s->strstart-1]));

//Tracevv((stderr,"%c", s->window[s->strstart]));

//Tracevv((stderr,"%c", s.window[s.strstart]));

//Z_ASCII:                1, // = Z_TEXT (deprecated)

//Z_VERSION_ERROR: -6,

//[MAXBITS+1];     /* offsets in table for each length */

//[MAXBITS+1];    /* number of codes of each length */

//_tr_flush_bits(s);

//check_match(s, s.strstart, s.strstart - 1, s.match_length);

//check_match(s, s.strstart-1, s.prev_match, s.prev_length);

//console.log(avanceCaptura);

//console.log(data);

//console.log(fileDec);

//console.log(unzip);

//console.log(zip);

//const Z_FILTERED          = 1;

//const Z_HUFFMAN_ONLY      = 2;

//const Z_RLE               = 3;

//construir html;

//crc32(0L, Z_NULL, 0);

//doc.setTextColor(300);

//footer

//header

//here = opts.here; /* table entry for duplication */

//here = state.here;

//if (module.hot) {module.hot.accept( './generales.js',function(){console.log ('Aceptando cambios'); window.loadCat=loadCat;})}

//if (sizeof(int) <= 2) {

//if (state === Z_NULL) return Z_MEM_ERROR;

//if (static_init_done) return;

//if (strm.avail_out <= 0) { throw new Error("bug2");}

//import './generar_version_pub.js';

//import './imagenesb64.js';

//import './mideclaracion.js';

//int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */

//int val;

//ios safari 10.3 taints canvas with data urls unless crossOrigin is set to anonymous

//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;

//let out_length, in_length, dcode;

//module.hot.accept();

//new jspdf.jsPDF();//'p', 'pt', 'letter');

//opts.table_index += used;

//overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);

//pqremove(s, tree, n);  /* n = node of least frequency */

//put_byte(s, (Byte)s->bi_buf);

//s->d_buf = overlay + s->lit_bufsize/sizeof(ush);

//s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;

//s->pending_buf = (uchf *) overlay;

//s.high_water = 0;  /* nothing written to s->window yet */

//state.distcode.copy(state.codes);

//state.dmax = 1 << len;

//state.lencode = state.distcode = state.next = state.codes;

//state.lencode = state.next;

//state.next = state.codes;

//static_init_done = true;

//strm.msg = Z_NULL;                 /* in case we return an error */

//table.bits[next + huff] = len - drop;

//table.bits[opts.table_index] = 1;

//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;

//table.op[next + huff] = 64;            /* invalid code marker */

//table.op[opts.table_index] = 64;

//table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */

//table.val[next + huff] = 0;

//table.val[opts.table_index++] = 0;

//table.val[opts.table_index++] = 0;   //here.val = (var short)0;

//this.codes = new Int32Array(ENOUGH);       /* space for code tables */

//this.inlineAllImages(clone);

//this.max_insert_length = 0;

//uch depth[2*L_CODES+1];

//ush bl_count[MAX_BITS+1];

//variables globales

//window.jsPDF = window.jspdf = jsPDF;

//zmemcpy(state->window + state->wnext, end - copy, dist);

//zmemcpy(state->window, end - copy, copy);

//}
